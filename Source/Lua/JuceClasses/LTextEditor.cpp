#include "stdafx.h"
#include "LTextEditor.h"


void LTextEditor::wrapForLua (lua_State *L)
{
	using namespace luabind;

	module(L)
    [
		class_<TextEditor, bases<Component> >("TextEditor")
			.def(constructor<>())
			.def(constructor<const String &>())
			.def("setMultiLine", &TextEditor::setMultiLine)
			.def("isMultiLine", &TextEditor::isMultiLine)
			.def("setReturnKeyStartsNewLine", &TextEditor::setReturnKeyStartsNewLine)
			.def("getReturnKeyStartsNewLine", &TextEditor::getReturnKeyStartsNewLine)
			.def("setTabKeyUsedAsCharacter", &TextEditor::setTabKeyUsedAsCharacter)
			.def("isTabKeyUsedAsCharacter", &TextEditor::isTabKeyUsedAsCharacter)
			.def("setEscapeAndReturnKeysConsumed", &TextEditor::setEscapeAndReturnKeysConsumed)
			.def("setReadOnly", &TextEditor::setReadOnly)
			.def("isReadOnly", &TextEditor::isReadOnly)
			.def("setCaretVisible", &TextEditor::setCaretVisible)
			.def("isCaretVisible", &TextEditor::isCaretVisible)
			.def("setScrollbarsShown", &TextEditor::setScrollbarsShown)
			.def("areScrollbarsShown", &TextEditor::areScrollbarsShown)
			.def("setPasswordCharacter", &TextEditor::setPasswordCharacter)
			.def("getPasswordCharacter", &TextEditor::getPasswordCharacter)
			.def("setPopupMenuEnabled", &TextEditor::setPopupMenuEnabled)
			.def("isPopupMenuEnabled", &TextEditor::isPopupMenuEnabled)
			.def("isPopupMenuCurrentlyActive", &TextEditor::isPopupMenuCurrentlyActive)
			.def("setFont", &TextEditor::setFont)
			.def("applyFontToAllText", &TextEditor::applyFontToAllText)
			.def("getFont", &TextEditor::getFont)
			.def("setSelectAllWhenFocused", &TextEditor::setSelectAllWhenFocused)
			.def("setTextToShowWhenEmpty", &TextEditor::setTextToShowWhenEmpty)
			.def("setScrollBarThickness", &TextEditor::setScrollBarThickness)
			.def("addListener", &TextEditor::addListener)
			.def("removeListener", &TextEditor::removeListener)
			.def("getText", &TextEditor::getText)
			.def("getTextInRange", &TextEditor::getTextInRange)
			.def("isEmpty", &TextEditor::isEmpty)
			.def("setText", &TextEditor::setText)
			.def("getTextValue", &TextEditor::getTextValue)
			.def("insertTextAtCaret", &TextEditor::insertTextAtCaret)
			.def("clear", &TextEditor::clear)
			.def("cut", &TextEditor::cut)
			.def("copy", &TextEditor::copy)
			.def("paste", &TextEditor::paste)
			.def("getCaretPosition", &TextEditor::getCaretPosition)
			.def("setCaretPosition", &TextEditor::setCaretPosition)
			.def("scrollEditorToPositionCaret", &TextEditor::scrollEditorToPositionCaret)
			.def("getCaretRectangle", &TextEditor::getCaretRectangle)
			.def("setHighlightedRegion", &TextEditor::setHighlightedRegion)
			.def("getHighlightedRegion", &TextEditor::getHighlightedRegion)
			.def("getHighlightedText", &TextEditor::getHighlightedText)
			.def("getTextIndexAt", &TextEditor::getTextIndexAt)
			.def("getTotalNumChars", &TextEditor::getTotalNumChars)
			.def("getTextWidth", &TextEditor::getTextWidth)
			.def("setIndents", &TextEditor::setIndents)
			.def("setBorder", &TextEditor::setBorder)
			.def("getBorder", &TextEditor::getBorder)
			.def("setScrollToShowCursor", &TextEditor::setScrollToShowCursor)
			.def("moveCaretToEnd", (void (TextEditor::*)()) &TextEditor::moveCaretToEnd)
			.def("moveCaretLeft", &TextEditor::moveCaretLeft)
			.def("moveCaretRight", &TextEditor::moveCaretRight)
			.def("moveCaretUp", &TextEditor::moveCaretUp)
			.def("moveCaretDown", &TextEditor::moveCaretDown)
			.def("pageUp", &TextEditor::pageUp)
			.def("pageDown", &TextEditor::pageDown)
			.def("scrollDown", &TextEditor::scrollDown)
			.def("scrollUp", &TextEditor::scrollUp)
			.def("moveCaretToTop", &TextEditor::moveCaretToTop)
			.def("moveCaretToStartOfLine", &TextEditor::moveCaretToStartOfLine)
			.def("moveCaretToEnd", (bool (TextEditor::*)(bool)) &TextEditor::moveCaretToEnd)
			.def("moveCaretToEndOfLine", &TextEditor::moveCaretToEndOfLine)
			.def("deleteBackwards", &TextEditor::deleteBackwards)
			.def("deleteForwards", &TextEditor::deleteForwards)
			.def("copyToClipboard", &TextEditor::copyToClipboard)
			.def("cutToClipboard", &TextEditor::cutToClipboard)
			.def("pasteFromClipboard", &TextEditor::pasteFromClipboard)
			.def("selectAll", &TextEditor::selectAll)
			.def("undo", &TextEditor::undo)
			.def("redo", &TextEditor::redo)
			.def("addPopupMenuItems", &TextEditor::addPopupMenuItems)
			.def("setInputFilter", &TextEditor::setInputFilter)
			.def("setInputRestrictions", &TextEditor::setInputRestrictions)
			.def("redo", &TextEditor::redo)
	];
}