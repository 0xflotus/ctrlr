<?xml version="1.0" encoding="UTF-8"?>

<panel name="JoMoX M.Brane 11" panelShowDialogs="1" panelMessageTime="10000"
       panelAuthorName="Roman Kubiak" panelAuthorEmail="kubiak.roman@gmail.com"
       panelAuthorUrl="http://ctrlr.org" panelAuthorDesc="" panelVersionMajor="1"
       panelVersionMinor="0" panelVersionName="Hell-O-Kitty" panelVendor=""
       panelDevice="" panelMidiSnapshotAfterLoad="0" panelMidiSnapshotAfterProgramChange="0"
       panelMidiSnapshotDelay="10" panelMidiInputChannelDevice="1" panelMidiInputDevice="-- None"
       panelMidiControllerChannelDevice="1" panelMidiControllerDevice="-- None"
       panelMidiOutputChannelDevice="1" panelMidiOutputDevice="-- None"
       panelMidiInputFromHost="0" panelMidiInputChannelHost="1" panelMidiOutputToHost="0"
       panelMidiOutputChannelHost="1" panelMidiThruH2H="0" panelMidiThruH2HChannelize="0"
       panelMidiThruH2D="0" panelMidiThruH2DChannelize="0" panelMidiThruD2D="0"
       panelMidiThruD2DChannelize="0" panelMidiThruD2H="0" panelMidiThruD2HChannelize="0"
       panelMidiRealtimeIgnore="1" panelMidiInputThreadPriority="7"
       panelMidiProgram="0" panelMidiBankLsb="0" panelMidiBankMsb="0"
       panelMidiSendProgramChangeOnLoad="0" panelMidiProgramCalloutOnprogramChange="0"
       panelMidiMatchCacheSize="32" panelMidiGlobalDelay="0" luaPanelMidiChannelChanged="-- None"
       luaPanelMidiReceived="-- None" luaPanelLoaded="panelLoaded" luaPanelBeforeLoad="-- None"
       luaPanelSaved="-- None" luaPanelResourcesLoaded="-- None" luaPanelProgramChanged="-- None"
       luaPanelGlobalChanged="-- None" luaPanelMessageHandler="-- None"
       luaPanelModulatorValueChanged="-- None" panelFilePath="/home/r.kubiak/devel/ctrlr/Panels/JoMoX - M.Brane 11.panel"
       panelUID="8.JfP5OBH3gAB" panelInstanceUID="HryD" panelInstanceManufacturerID="sbza"
       panelModulatorListColumns="-- None" panelModulatorListCsvDelimiter=","
       panelModulatorListXmlRoot="ctrlrModulatorList" panelModulatorListXmlModulator="ctrlrModulator"
       panelModulatorListSortOption="1" panelGlobalVariables="-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1"
       panelResources="-- None" panelPropertyDisplayIDs="0" ctrlrMenuItemBackgroundColour="ffffffff"
       ctrlrMenuItemTextColour="ff000000" ctrlrMenuItemHighlightedTextColour="ffffffff"
       ctrlrMenuItemHighlightColour="ff4364ff" ctrlrMenuItemFont="&lt;Sans-Serif&gt;;18;0;0;0;0;1;0"
       ctrlrMenuItemSeparatorColour="44000000" ctrlrMenuItemHeaderColour="ff000000"
       ctrlrMenuBarBackgroundColour1="fff7f7f7" ctrlrMenuBarBackgroundColour2="ffcccccc"
       ctrlrMenuBarTextColour="ff000000" ctrlrMenuBarHighlightedTextColour="ffffffff"
       ctrlrMenuBarHighlightColour="ff4364ff" ctrlrMenuBarFont="&lt;Sans-Serif&gt;;18;0;0;0;0;1;0"
       ctrlrUseEditorWrapper="0" panelIndex="0" uiLuaConsoleSnips="setLookAndFeel_V3 (panel:getCanvas(), CustomLookAndFeel())">
  <uiWindowManager>
    <uiChildWindow uiChildWindowName="LuaMethodEditor" uiChildWindowState="586 242 895 774">
      <uiChildWindowContentState luaMethodEditor="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#13;&#10;&#13;&#10;&lt;OPEN id=&quot;LUA&quot; scrollPos=&quot;0&quot;&gt;&#13;&#10;  &lt;SELECTED id=&quot;/LUA/myNewMethod&quot;/&gt;&#13;&#10;&lt;/OPEN&gt;&#13;&#10;;ff3960e6c6c44f0e84826cbd19973d0e:f9c6a47adcaa4c0db055a989de0f78ef"/>
    </uiChildWindow>
    <uiChildWindow uiChildWindowName="LuaConsole" uiChildWindowState="1044 469 797 502">
      <uiChildWindowContentState/>
    </uiChildWindow>
  </uiWindowManager>
  <midiLibrary uuid="8ebcc930a4de49a3ae0c5a8cf8d28dab" luaTransInfo="-- None"
               midiLibraryParameterIndexProperty="modulatorCustomIndex" midiLibraryMidiProgramChangeControl="0"
               midiLibrarySendSnapAfterPChg="0" midiLibraryDefaultBankName="New Bank - %H:%M:%S"
               midiLibraryDefaultProgramName="New Program - %H:%M:%S" midiLibraryDefaultSnapshotName="Snapshot - %H:%M:%S"
               midiLibraryCustomRequests="">
    <midiLibrarySnapshots name="Snapshots"/>
    <midiLibraryFirmware name="Firmware"/>
    <midiLibraryEditBuffer name="Edit buffer"/>
    <midiLibraryTransactions name="Transactions">
      <trans name="Request Identity" enabled="1" internal="1" transCap="midiLibrary"
             timeout="1000" transReqFormulaPrefix="F0 7E 7F 06 01" transReqFormulaSuffix="F7"
             transRespSizeCheck="0" transReqDataLen="0" transReqExists="1"
             transConfExists="0" transRespFormulaPrefix="F0 7E 7F 06 02" transRespFormulaSuffix="F7"
             transRespDataLen="8" transRespDataCheck="1" transRespExists="1"/>
      <trans name="Request Identity [LUA]" enabled="1" internal="1" transCap="midiLibrary"
             timeout="1000" transReqFormulaPrefix="" transReqFormulaSuffix=""
             transReqDataLen="0" transReqExists="1" transConfExists="0" transRespFormulaPrefix=""
             transRespFormulaSuffix="" transRespDataLen="8" transRespDataCheck="0"
             transRespSizeCheck="0" transRespExists="1" luaTransRequest="transIdReq"
             luaTransProcess="transIdProc"/>
      <trans name="Send SYX file" enabled="1" internal="1" transCap="midiLibrary"
             timeout="1000" transReqFormulaPrefix="" transReqFormulaSuffix=""
             transReqDataLen="0" transReqExists="1" transConfExists="0" transRespFormulaPrefix=""
             transRespFormulaSuffix="" transRespDataLen="0" transRespDataCheck="0"
             transRespExists="0" luaTransRequest="transSYXSendReq"/>
      <trans name="Recieve SYX file" enabled="1" internal="1" transCap="midiLibrary"
             timeout="1000" transReqFormulaPrefix="" transReqFormulaSuffix=""
             transReqDataLen="0" transReqExists="1" transConfExists="0" transRespFormulaPrefix=""
             transRespFormulaSuffix="" transRespDataLen="0" transRespDataCheck="0"
             transRespExists="1" luaTransRequest="transSYXRcvReq" luaTransProcess="transSYXRcvProc"/>
    </midiLibraryTransactions>
  </midiLibrary>
  <luaManager>
    <luaManagerMethods>
      <luaMethodGroup name="Built-In" uuid="84e193d1e693497c913d0d8c13c8b3eb">
        <luaMethod luaMethodName="table_dump" luaMethodCode="-- @1.1&#13;&#10;--&#13;&#10;-- Print table contents&#13;&#10;--&#13;&#10;function table_dump(table)&#13;&#10;&#9;for key,value in ipairs(table) do&#13;&#10;&#9;&#9;_DBG (&quot;KEY= [&quot;..key..&quot;]&quot;)&#13;&#10;&#13;&#10;&#9;&#9;if (type(value) == &quot;table&quot;) then&#13;&#10;&#9;&#9;&#9;table_dump(value)&#13;&#10;&#9;&#9;elseif (type(value) == &quot;nil&quot;) then&#13;&#10;&#9;&#9;&#9;_DBG (&quot; = NIL&quot;)&#13;&#10;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;what (value)&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="00000000000000000000000000000001"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="what" luaMethodCode="-- @1.1&#13;&#10;--&#13;&#10;-- Print methods for an object&#13;&#10;--&#13;&#10;function what(o)&#13;&#10;&#9;info = class_info(o)&#13;&#10;&#9;if info ~= nil then&#13;&#10;&#9;&#9;ret = &quot;Object type [&quot; .. info.name .. &quot;]\n-----------------------------------------------------------------\n\n&quot;..&quot;Members:\n&quot;&#13;&#10;&#13;&#10;&#9;&#9;if info.name == &quot;table&quot; then&#13;&#10;&#9;&#9;&#9;table_dump(o)&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;for k, v in pairs(info.methods) do&#13;&#10;&#9;&#9;&#9;ret = ret .. string.format (&quot;\t%30s:\t%5s\n&quot;, k, type(v))&#13;&#10;&#9;&#9;end&#13;&#10;&#9;&#9;ret = ret .. &quot;\n\nAttributes:\n&quot;&#13;&#10;&#9;&#9;for k, v in pairs(info.attributes) do&#13;&#10;&#9;&#9;&#9;ret = ret .. string.format (&quot;\t%30s:\t%5s\n&quot;, k, type(v))&#13;&#10;&#9;&#9;end&#13;&#10;&#9;&#9;ret = ret .. &quot;\n-----------------------------------------------------------------&quot;&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;_DBG (ret)&#13;&#10;&#9;return ret&#13;&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="00000000000000000000000000000002"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="how" luaMethodCode="-- @1.1&#13;&#10;--&#13;&#10;-- Print all available classes&#13;&#10;--&#13;&#10;function how()&#13;&#10;&#9;ret = &quot;Available classes:\n&quot;&#13;&#10;&#9;ret = ret .. &quot;\n-----------------------------------------------------------------&quot;&#13;&#10;&#9;for i,v in ipairs(class_names()) do&#13;&#10;&#9;&#9;ret = ret .. &quot;\t&quot;.. v .. &quot;\n&quot;&#13;&#10;&#9;end&#13;&#10;&#9;ret = ret .. &quot;\n-----------------------------------------------------------------&quot;&#13;&#10;&#9;_DBG (ret)&#13;&#10;&#9;return ret&#13;&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="00000000000000000000000000000003"
                   luaMethodValid="1"/>
      </luaMethodGroup>
      <luaMethod luaMethodName="CustomLookAndFeel" luaMethodCode="class 'CustomLookAndFeel' (LookAndFeel)&#13;&#10;&#13;&#10;function CustomLookAndFeel:__init()&#13;&#10;&#9;LookAndFeel.__init(self)&#13;&#10;&#13;&#10;&#9;console (&quot;CustomLookAndFeel:init&quot;)&#13;&#10;end&#13;&#10;&#13;&#10;function CustomLookAndFeel:getIdealPopupMenuSize (params)&#13;&#10;&#9;-- console (&quot;CustomLookAndFeel:getIdealPopupMenuSize&quot;)&#13;&#10;end&#13;&#10;&#13;&#10;function CustomLookAndFeel:drawRotarySlider (p)&#13;&#10;&#9;local g = p.g;&#13;&#10;&#9;local slider = p.slider;&#13;&#10;&#13;&#10;&#9;red = Colour(0xffff0000)&#13;&#10;&#13;&#10;    radius = (p.height / 2) - 2.0;&#13;&#10;    centreX = p.x + p.width * 0.5;&#13;&#10;    centreY = p.y + p.height * 0.5;&#13;&#10;    rx = centreX - radius;&#13;&#10;    ry = centreY - radius;&#13;&#10;    rw = radius * 2.0;&#13;&#10;    angle = p.rotaryStartAngle + p.sliderPosProportional * (p.rotaryEndAngle - p.rotaryStartAngle);&#13;&#10;    thickness = 0.5;&#13;&#10;    segmentSize = (p.rotaryEndAngle - p.rotaryStartAngle) / 20.0;&#13;&#10;&#13;&#10;    for i=p.rotaryStartAngle,p.rotaryEndAngle,segmentSize do&#13;&#10;        if i &lt;= angle and angle ~= p.rotaryStartAngle then&#13;&#10;            g:setColour (red:withAlpha(0.75))&#13;&#10;        else&#13;&#10;            g:setColour (red:withAlpha(0.2))&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;        filledArc = Path()&#13;&#10;        filledArc:addPieSegment (rx, ry, rw, rw, i, (i + segmentSize - (segmentSize * 0.2)), thickness)&#13;&#10;        g:fillPath (filledArc, AffineTransform())&#13;&#10;    end&#13;&#10;&#13;&#10;&#13;&#10;&#9;f = Font (rw * 0.25, Font.plain)&#13;&#10;&#9;g:setFont (f)&#13;&#10;&#9;g:setColour (red:brighter (0.2))&#13;&#10;    g:drawText (string.format (&quot;%.0f&quot;, slider:getValue()), 0, 0, p.width, p.height, Justification (Justification.centred), true)&#13;&#10;&#13;&#10;end"
                 luaMethodLinkedProperty="" luaMethodSource="0" uuid="ff3960e6c6c44f0e84826cbd19973d0e"
                 luaMethodValid="1"/>
      <luaMethod luaMethodName="panelLoaded" luaMethodCode="--&#10;-- Called when the panel has finished loading&#10;--&#10;panelLoaded = function()&#13;&#10;&#9;setLookAndFeel (panel:getCanvas(), CustomLookAndFeel())&#10;end"
                 luaMethodLinkedProperty="luaPanelLoaded" luaMethodSource="0"
                 uuid="79211f0c786541969198f92c373e8b03" luaMethodValid="1"/>
      <luaMethod luaMethodName="testLF" luaMethodCode="--&#10;-- Called when a modulator value changes&#10;-- @mod   http://ctrlr.org/api/class_ctrlr_modulator.html&#10;-- @value    new numeric value of the modulator&#10;--&#10;testLF = function(mod, value)&#13;&#10;&#9;setLookAndFeel (panel:getCanvas(), CustomLookAndFeel())&#10;end"
                 luaMethodLinkedProperty="luaModulatorValueChange" luaMethodSource="0"
                 uuid="573612fff86e428eb80609bd18d6c373" luaMethodValid="1"/>
      <luaMethod luaMethodName="table_dump" luaMethodCode="-- @1.1&#13;&#10;--&#13;&#10;-- Print table contents&#13;&#10;--&#13;&#10;function table_dump(table)&#13;&#10;&#9;for key,value in ipairs(table) do&#13;&#10;&#9;&#9;_DBG (&quot;KEY= [&quot;..key..&quot;]&quot;)&#13;&#10;&#13;&#10;&#9;&#9;if (type(value) == &quot;table&quot;) then&#13;&#10;&#9;&#9;&#9;table_dump(value)&#13;&#10;&#9;&#9;elseif (type(value) == &quot;nil&quot;) then&#13;&#10;&#9;&#9;&#9;_DBG (&quot; = NIL&quot;)&#13;&#10;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;what (value)&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;end"
                 luaMethodLinkedProperty="" luaMethodSource="0" uuid="00000000000000000000000000000001"
                 luaMethodValid="1"/>
      <luaMethod luaMethodName="what" luaMethodCode="-- @1.1&#13;&#10;--&#13;&#10;-- Print methods for an object&#13;&#10;--&#13;&#10;function what(o)&#13;&#10;&#9;info = class_info(o)&#13;&#10;&#9;if info ~= nil then&#13;&#10;&#9;&#9;ret = &quot;Object type [&quot; .. info.name .. &quot;]\n-----------------------------------------------------------------\n\n&quot;..&quot;Members:\n&quot;&#13;&#10;&#13;&#10;&#9;&#9;if info.name == &quot;table&quot; then&#13;&#10;&#9;&#9;&#9;table_dump(o)&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;for k, v in pairs(info.methods) do&#13;&#10;&#9;&#9;&#9;ret = ret .. string.format (&quot;\t%30s:\t%5s\n&quot;, k, type(v))&#13;&#10;&#9;&#9;end&#13;&#10;&#9;&#9;ret = ret .. &quot;\n\nAttributes:\n&quot;&#13;&#10;&#9;&#9;for k, v in pairs(info.attributes) do&#13;&#10;&#9;&#9;&#9;ret = ret .. string.format (&quot;\t%30s:\t%5s\n&quot;, k, type(v))&#13;&#10;&#9;&#9;end&#13;&#10;&#9;&#9;ret = ret .. &quot;\n-----------------------------------------------------------------&quot;&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;_DBG (ret)&#13;&#10;&#9;return ret&#13;&#10;end"
                 luaMethodLinkedProperty="" luaMethodSource="0" uuid="00000000000000000000000000000002"
                 luaMethodValid="1"/>
      <luaMethod luaMethodName="how" luaMethodCode="-- @1.1&#13;&#10;--&#13;&#10;-- Print all available classes&#13;&#10;--&#13;&#10;function how()&#13;&#10;&#9;ret = &quot;Available classes:\n&quot;&#13;&#10;&#9;ret = ret .. &quot;\n-----------------------------------------------------------------&quot;&#13;&#10;&#9;for i,v in ipairs(class_names()) do&#13;&#10;&#9;&#9;ret = ret .. &quot;\t&quot;.. v .. &quot;\n&quot;&#13;&#10;&#9;end&#13;&#10;&#9;ret = ret .. &quot;\n-----------------------------------------------------------------&quot;&#13;&#10;&#9;_DBG (ret)&#13;&#10;&#9;return ret&#13;&#10;end"
                 luaMethodLinkedProperty="" luaMethodSource="0" uuid="00000000000000000000000000000003"
                 luaMethodValid="1"/>
      <luaMethod luaMethodName="myNewMethod" luaMethodCode="class 'myNewMethod' (LookAndFeel_V3)&#10;&#10;function myNewMethod:__init()&#10;&#9;--&#10;&#9;-- This is needed for luabind, please don't remove this line&#10;&#9;-- Add as much code as you like here, just leave this&#10;&#9;--&#10;&#9;LookAndFeel_V3.__init(self)&#10;end&#10;&#10;function myNewMethod:findColour (--[[ int p.colourId --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;&#10;&#9;-- return Colour&#10;end&#10;&#10;function myNewMethod:setColour (--[[ int p.colourId, Colour p.colour --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;end&#10;&#10;function myNewMethod:isColourSpecified (--[[ int p.colourId --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;&#10;&#9;-- return bool&#10;end&#10;&#10;function myNewMethod:getTypefaceForFont (--[[ Font p.font --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;&#10;&#9;-- return Typeface::Ptr&#10;end&#10;&#10;function myNewMethod:getMouseCursorFor (--[[ Component p.component --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;&#10;&#9;-- return MouseCursor&#10;end&#10;&#10;function myNewMethod:drawButtonBackground (--[[ Graphics p.g, Button p.b, Colour p.c, bool p.over, bool p.down --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;end&#10;&#10;function myNewMethod:drawButtonText (--[[ Graphics p.g, TextButton p.button, bool p.isMouseOverButton, bool p.isButtonDown --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;end&#10;&#10;function myNewMethod:drawToggleButton (--[[ Graphics p.g, ToggleButton p.button, bool p.isMouseOverButton, bool p.isButtonDown --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;end&#10;&#10;function myNewMethod:changeToggleButtonWidthToFitText (--[[ ToggleButton p.button --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;end&#10;&#10;function myNewMethod:drawTickBox (--[[ Graphics p.g, Component p.component, float p.x, float p.y, float p.w, float p.h, bool p.ticked, bool p.isEnabled, bool p.isMouseOverButton, bool p.isButtonDown --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;end&#10;&#10;function myNewMethod:createAlertWindow (--[[ String p.title, String p.message, String p.button1, String p.button2, String p.button3, AlertWindow::AlertIconType p.iconType, int p.numButtons, Component* p.associatedComponent --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;&#10;&#9;-- return AlertWindow*&#10;end&#10;&#10;function myNewMethod:drawAlertBox (--[[ Graphics p.g, AlertWindow p.window, Rectangle p.textArea, TextLayout p.layout --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;end&#10;&#10;function myNewMethod:getAlertBoxWindowFlags (--[[  --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;&#10;&#9;-- return int&#10;end&#10;&#10;function myNewMethod:getAlertWindowButtonHeight (--[[  --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;&#10;&#9;-- return int&#10;end&#10;&#10;function myNewMethod:getAlertWindowMessageFont (--[[  --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;&#10;&#9;-- return Font&#10;end&#10;&#10;function myNewMethod:getAlertWindowFont (--[[  --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;&#10;&#9;-- return Font&#10;end&#10;&#10;function myNewMethod:drawProgressBar (--[[ Graphics p.g, ProgressBar p.bar, int p.width, int p.height, double p.progress, String p.textToShow --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;end&#10;&#10;function myNewMethod:drawSpinningWaitAnimation (--[[ Graphics p.g, Colour p.colour, int p.x, int p.y, int p.w, int p.h --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;end&#10;&#10;function myNewMethod:areScrollbarButtonsVisible (--[[  --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;&#10;&#9;-- return bool&#10;end&#10;&#10;function myNewMethod:getScrollbarEffect (--[[  --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;&#10;&#9;-- return ImageEffectFilter*&#10;end&#10;&#10;function myNewMethod:getMinimumScrollbarThumbSize (--[[ ScrollBar p.bar --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;&#10;&#9;-- return int&#10;end&#10;&#10;function myNewMethod:getDefaultScrollbarWidth (--[[  --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;&#10;&#9;-- return int&#10;end&#10;&#10;function myNewMethod:getScrollbarButtonSize (--[[ ScrollBar p.bar --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;&#10;&#9;-- return int&#10;end&#10;&#10;function myNewMethod:getTickShape (--[[ float p.height --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;&#10;&#9;-- return Path&#10;end&#10;&#10;function myNewMethod:getCrossShape (--[[ float p.height --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;&#10;&#9;-- return Path&#10;end&#10;&#10;function myNewMethod:drawTreeviewPlusMinusBox (--[[ Graphics p.g, Rectangle p.area, Colour p.backgroundColour, bool p.isOpen, bool p.isMouseOver --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;end&#10;&#10;function myNewMethod:fillTextEditorBackground (--[[ Graphics p.g, int p.width, int p.height, TextEditor p.editor --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;end&#10;&#10;function myNewMethod:drawTextEditorOutline (--[[ Graphics p.g, int p.width, int p.height, TextEditor p.editor --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;end&#10;&#10;function myNewMethod:createCaretComponent (--[[ Component* p.keyFocusOwner --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;&#10;&#9;-- return CaretComponent*&#10;end&#10;&#10;function myNewMethod:getDefaultFolderImage (--[[  --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;&#10;&#9;-- return Drawable*&#10;end&#10;&#10;function myNewMethod:getDefaultDocumentFileImage (--[[  --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;&#10;&#9;-- return Drawable*&#10;end&#10;&#10;function myNewMethod:createFileChooserHeaderText (--[[ String p.title, String p.instructions --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;&#10;&#9;-- return AttributedString&#10;end&#10;&#10;function myNewMethod:drawFileBrowserRow (--[[ Graphics p.g, int p.width, int p.height, String p.filename, Image* p.icon, String p.fileSizeDescription, String p.fileTimeDescription, bool p.isDirectory, bool p.isItemSelected, int p.itemIndex, DirectoryContentsDisplayComponent p.component --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;end&#10;&#10;function myNewMethod:createFileBrowserGoUpButton (--[[  --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;&#10;&#9;-- return Button*&#10;end&#10;&#10;function myNewMethod:layoutFileBrowserComponent (--[[ FileBrowserComponent p.component, DirectoryContentsDisplayComponent* p.contentsComponent, FilePreviewComponent* p.previewComponent, ComboBox* p.currentPathBox, TextEditor* p.filenameBox, Button* p.goUpButton --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;end&#10;&#10;function myNewMethod:drawBubble (--[[ Graphics p.g, BubbleComponent p.bubble, Point p.tip, Rectangle p.body --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;end&#10;&#10;function myNewMethod:drawLasso (--[[ Graphics p.g, Component p.component --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;end&#10;&#10;function myNewMethod:drawPopupMenuBackground (--[[ Graphics p.g, int p.width, int p.height --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;end&#10;&#10;function myNewMethod:drawPopupMenuItem (--[[ Graphics p.g, Rectangle p.area, bool p.isSeparator, bool p.isActive, bool p.isHighlighted, bool p.isTicked, bool p.hasSubMenu, String p.text, String p.shortcutKeyText, Drawable* p.icon, Colour* p.textColour --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;end&#10;&#10;function myNewMethod:getPopupMenuFont (--[[  --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;&#10;&#9;-- return Font&#10;end&#10;&#10;function myNewMethod:drawPopupMenuUpDownArrow (--[[ Graphics p.g, int p.width, int p.height, bool p.isScrollUpArrow --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;end&#10;&#10;function myNewMethod:getIdealPopupMenuItemSize (--[[ String p.text, bool p.isSeparator, int p.standardMenuItemHeight, int p.idealWidth, int p.idealHeight --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;end&#10;&#10;function myNewMethod:getMenuWindowFlags (--[[  --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;&#10;&#9;-- return int&#10;end&#10;&#10;function myNewMethod:drawMenuBarBackground (--[[ Graphics p.g, int p.width, int p.height, bool p.isMouseOverBar, MenuBarComponent p.component --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;end&#10;&#10;function myNewMethod:getMenuBarItemWidth (--[[ MenuBarComponent p.component, int p.itemIndex, String p.itemText --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;&#10;&#9;-- return int&#10;end&#10;&#10;function myNewMethod:getMenuBarFont (--[[ MenuBarComponent p.component, int p.itemIndex, String p.itemText --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;&#10;&#9;-- return Font&#10;end&#10;&#10;function myNewMethod:drawMenuBarItem (--[[ Graphics p.g, int p.width, int p.height, int p.itemIndex, String p.itemText, bool p.isMouseOverItem, bool p.isMenuOpen, bool p.isMouseOverBar, MenuBarComponent p.component --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;end&#10;&#10;function myNewMethod:drawComboBox (--[[ Graphics p.g, int p.width, int p.height, bool p.isButtonDown, int p.buttonX, int p.buttonY, int p.buttonW, int p.buttonH, ComboBox p.component --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;end&#10;&#10;function myNewMethod:getComboBoxFont (--[[ ComboBox p.component --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;&#10;&#9;-- return Font&#10;end&#10;&#10;function myNewMethod:createComboBoxTextBox (--[[ ComboBox p.component --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;&#10;&#9;-- return Label*&#10;end&#10;&#10;function myNewMethod:positionComboBoxText (--[[ ComboBox p.component, Label p.label --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;end&#10;&#10;function myNewMethod:drawLabel (--[[ Graphics p.g, Label p.label --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;end&#10;&#10;function myNewMethod:drawLinearSlider (--[[ Graphics p.g, int p.x, int p.y, int p.width, int p.height, float p.sliderPos, float p.minSliderPos, float p.maxSliderPos, Slider::SliderStyle p.style, Slider p.component --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;end&#10;&#10;function myNewMethod:drawLinearSliderBackground (--[[ Graphics p.g, int p.x, int p.y, int p.width, int p.height, float p.sliderPos, float p.minSliderPos, float p.maxSliderPos, Slider::SliderStyle p.style, Slider p.component --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;end&#10;&#10;function myNewMethod:drawLinearSliderThumb (--[[ Graphics p.g, int p.x, int p.y, int p.width, int p.height, float p.sliderPos, float p.minSliderPos, float p.maxSliderPos, Slider::SliderStyle p.style, Slider p.component --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;end&#10;&#10;function myNewMethod:getSliderThumbRadius (--[[ Slider p.component --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;&#10;&#9;-- return int&#10;end&#10;&#10;function myNewMethod:drawRotarySlider (--[[ Graphics p.g, int p.x, int p.y, int p.width, int p.height, float p.sliderPosProportional, float p.rotaryStartAngle, float p.rotaryEndAngle, Slider p.slider --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;end&#10;&#10;function myNewMethod:createSliderButton (--[[ Slider p.component, bool p.isIncrement --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;&#10;&#9;-- return Button*&#10;end&#10;&#10;function myNewMethod:createSliderTextBox (--[[ Slider p.component --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;&#10;&#9;-- return Label*&#10;end&#10;&#10;function myNewMethod:getSliderEffect (--[[ Slider p.component --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;&#10;&#9;-- return ImageEffectFilter*&#10;end&#10;&#10;function myNewMethod:getTooltipSize (--[[ String p.tipText, int p.width, int p.height --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;end&#10;&#10;function myNewMethod:drawTooltip (--[[ Graphics p.g, String p.text, int p.width, int p.height --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;end&#10;&#10;function myNewMethod:createFilenameComponentBrowseButton (--[[ String p.text --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;&#10;&#9;-- return Button*&#10;end&#10;&#10;function myNewMethod:layoutFilenameComponent (--[[ FilenameComponent p.component, ComboBox* p.filenameBox, Button* p.browseButton --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;end&#10;&#10;function myNewMethod:drawConcertinaPanelHeader (--[[ Graphics p.g, Rectangle p.area, bool p.isMouseOver, bool p.isMouseDown, ConcertinaPanel p.component, Component p.panel --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;end&#10;&#10;function myNewMethod:drawCornerResizer (--[[ Graphics p.g, int p.w, int p.h, bool p.isMouseOver, bool p.isMouseDragging --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;end&#10;&#10;function myNewMethod:drawResizableFrame (--[[ Graphics p.g, int p.w, int p.h, BorderSize p.borderSize --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;end&#10;&#10;function myNewMethod:fillResizableWindowBackground (--[[ Graphics p.g, int p.w, int p.h, BorderSize p.borderSize, ResizableWindow p.window --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;end&#10;&#10;function myNewMethod:drawResizableWindowBorder (--[[ Graphics p.g, int p.w, int p.h, BorderSize p.borderSize, ResizableWindow p.window --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;end&#10;&#10;function myNewMethod:drawDocumentWindowTitleBar (--[[ DocumentWindow p.window, Graphics p.g, int p.w, int p.h, int p.titleSpaceX, int p.titleSpaceW, Image* p.icon, bool p.drawTitleTextOnLeft --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;end&#10;&#10;function myNewMethod:createDocumentWindowButton (--[[ int p.buttonType --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;&#10;&#9;-- return Button*&#10;end&#10;&#10;function myNewMethod:positionDocumentWindowButtons (--[[ DocumentWindow p.window, int p.titleBarX, int p.titleBarY, int p.titleBarW, int p.titleBarH, Button* p.minimiseButton, Button* p.maximiseButton, Button* p.closeButton, bool p.positionTitleBarButtonsOnLeft --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;end&#10;&#10;function myNewMethod:getDefaultMenuBarHeight (--[[  --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;&#10;&#9;-- return int&#10;end&#10;&#10;function myNewMethod:createDropShadowerForComponent (--[[ Component* p.component --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;&#10;&#9;-- return DropShadower*&#10;end&#10;&#10;function myNewMethod:drawGroupComponentOutline (--[[ Graphics p.g, int p.w, int p.h, String p.text, Justification p.justification, GroupComponent p.component --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;end&#10;&#10;function myNewMethod:getTabButtonSpaceAroundImage (--[[  --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;&#10;&#9;-- return int&#10;end&#10;&#10;function myNewMethod:getTabButtonOverlap (--[[ int p.tabDepth --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;&#10;&#9;-- return int&#10;end&#10;&#10;function myNewMethod:getTabButtonBestWidth (--[[ TabBarButton p.component, int p.tabDepth --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;&#10;&#9;-- return int&#10;end&#10;&#10;function myNewMethod:getTabButtonExtraComponentBounds (--[[ TabBarButton p.component, Rectangle p.textArea, Component p.extraComp --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;&#10;&#9;-- return Rectangle&lt;int&gt;&#10;end&#10;&#10;function myNewMethod:drawTabButton (--[[ TabBarButton p.component, Graphics p.g, bool p.isMouseOver, bool p.isMouseDown --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;end&#10;&#10;function myNewMethod:drawTabButtonText (--[[ TabBarButton p.component, Graphics p.g, bool p.isMouseOver, bool p.isMouseDown --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;end&#10;&#10;function myNewMethod:drawTabAreaBehindFrontButton (--[[ TabbedButtonBar p.component, Graphics p.g, int p.w, int p.h --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;end&#10;&#10;function myNewMethod:createTabButtonShape (--[[ TabBarButton p.component, Path p.p, bool p.isMouseOver, bool p.isMouseDown --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;end&#10;&#10;function myNewMethod:fillTabButtonShape (--[[ TabBarButton p.component, Graphics p.g, Path p.p, bool p.isMouseOver, bool p.isMouseDown --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;end&#10;&#10;function myNewMethod:createTabBarExtrasButton (--[[  --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;&#10;&#9;-- return Button*&#10;end&#10;&#10;function myNewMethod:drawImageButton (--[[ Graphics p.g, Image* p.image, int p.imageX, int p.imageY, int p.imageW, int p.imageH, Colour p.overlayColour, float p.imageOpacity, ImageButton p.component --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;end&#10;&#10;function myNewMethod:drawTableHeaderBackground (--[[ Graphics p.g, TableHeaderComponent p.component --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;end&#10;&#10;function myNewMethod:drawTableHeaderColumn (--[[ Graphics p.g, String p.columnName, int p.columnId, int p.width, int p.height, bool p.isMouseOver, bool p.isMouseDown, int p.columnFlags --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;end&#10;&#10;function myNewMethod:paintToolbarBackground (--[[ Graphics p.g, int p.width, int p.height, Toolbar p.component --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;end&#10;&#10;function myNewMethod:createToolbarMissingItemsButton (--[[ Toolbar p.component --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;&#10;&#9;-- return Button*&#10;end&#10;&#10;function myNewMethod:paintToolbarButtonBackground (--[[ Graphics p.g, int p.width, int p.height, bool p.isMouseOver, bool p.isMouseDown, ToolbarItemComponent p.component --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;end&#10;&#10;function myNewMethod:paintToolbarButtonLabel (--[[ Graphics p.g, int p.x, int p.y, int p.width, int p.height, String p.text, ToolbarItemComponent p.component --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;end&#10;&#10;function myNewMethod:drawStretchableLayoutResizerBar (--[[ Graphics p.g, int p.w, int p.h, bool p.isVerticalBar, bool p.isMouseOver, bool p.isMouseDragging --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;end&#10;&#10;function myNewMethod:drawPropertyPanelSectionHeader (--[[ Graphics p.g, String p.name, bool p.isOpen, int p.width, int p.height --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;end&#10;&#10;function myNewMethod:drawPropertyComponentBackground (--[[ Graphics p.g, int p.width, int p.height, PropertyComponent p.component --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;end&#10;&#10;function myNewMethod:drawPropertyComponentLabel (--[[ Graphics p.g, int p.width, int p.height, PropertyComponent p.component --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;end&#10;&#10;function myNewMethod:getPropertyComponentContentPosition (--[[ PropertyComponent p.component --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;&#10;&#9;-- return Rectangle&lt;int&gt;&#10;end&#10;&#10;function myNewMethod:drawCallOutBoxBackground (--[[ CallOutBox p.component, Graphics p.g, Path p.path, Image p.cachedImage --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;end&#10;&#10;function myNewMethod:drawLevelMeter (--[[ Graphics p.g, int p.width, int p.height, float p.level --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;end&#10;&#10;function myNewMethod:drawKeymapChangeButton (--[[ Graphics p.g, int p.width, int p.height, Button p.component, String p.keyDescription --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;end&#10;&#10;function myNewMethod:playAlertSound (--[[  --]] p)&#10;&#9;--&#10;&#9;-- Body&#10;&#9;--&#10;end"
                 luaMethodLinkedProperty="" luaMethodSource="0" uuid="f9c6a47adcaa4c0db055a989de0f78ef"
                 luaMethodValid="0"/>
    </luaManagerMethods>
  </luaManager>
  <panelResources/>
  <uiPanelEditor uiPanelCanvasRectangle="0 0 613 380" uiPanelSnapSize="8" uiPanelBackgroundColour="0xffffffff"
                 uiPanelBackgroundColour1="ff4a4a4a" uiPanelBackgroundColour2="ff000000"
                 uiPanelBackgroundGradientType="1" uiPanelImageResource="-- None"
                 uiPanelEditMode="0" uiPanelViewPortSize="1126" uiPanelPropertiesSize="281"
                 uiPanelLock="0" uiPanelDisabledOnEdit="0" uiPanelWidth="400"
                 uiPanelHeight="400" name="JoMoX M.Brane 11" uiPanelImageAlpha="255"
                 uiPanelImageLayout="64" uiPanelSnapActive="1" uiPanelPropertiesOnRight="0"
                 luaPanelPaintBackground="-- None" luaPanelResized="-- None" luaPanelFileDragDropHandler="-- None"
                 luaPanelFileDragEnterHandler="-- None" luaPanelFileDragExitHandler="-- None"
                 uiPanelInvisibleComponentAlpha="0.5" uiPanelMidiToolbarVisible="0"
                 uiPanelTooltipBackgroundColour="0xffeeeebb" uiPanelTooltipOutlineColour="0xff000000"
                 uiPanelTooltipColour="0xff000000" uiPanelTooltipCornerRound="1"
                 uiPanelTooltipPlacement="2" uiPanelTooltipFont="&lt;Sans-Serif&gt;;15;1;0;0;0;1;0"
                 uiPanelZoom="1">
    <uiPanelCanvasLayer uiPanelCanvasLayerName="New layer" uiPanelCanvasLayerUid="356c3936160000005b0000006e000000"
                        uiPanelCanvasLayerColour="0x000000" uiPanelCanvasLayerVisibility="1"
                        uiPanelCanvasLayerIndex="0"/>
  </uiPanelEditor>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="0" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="decay" modulatorMin="0" modulatorValue="70">
    <midi midiMessageType="0" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="110" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName="Decay"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               uiSliderStyle="RotaryVerticalDrag" uiSliderMin="0" uiSliderMax="127"
               uiSliderInterval="1" uiSliderDoubleClickEnabled="1" uiSliderDoubleClickValue="0"
               uiSliderValuePosition="0" uiSliderValueHeight="12" uiSliderValueWidth="64"
               uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3" uiSliderThumbWidth="0"
               uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0" uiSliderThumbFlatOnRight="0"
               uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0" uiSliderValueTextColour="ffffffff"
               uiSliderValueBgColour="ffffff" uiSliderRotaryOutlineColour="ffff0000"
               uiSliderRotaryFillColour="ffff0000" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="ffffff"
               uiSliderTrackColour="0xff0f0f0f" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" uiType="uiSlider"
               componentRectangle="392 280 80 80" componentLayerUid="356c3936160000005b0000006e000000"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="255" vstIndex="2" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="m1Pitch" modulatorMin="0" modulatorValue="127">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,90,-1:CC,ByteValue,LSB7bitValue,91,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName="M1 Pitch"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;0"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;0" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               uiSliderStyle="RotaryVerticalDrag" uiSliderMin="0" uiSliderMax="255"
               uiSliderInterval="1" uiSliderDoubleClickEnabled="1" uiSliderDoubleClickValue="0"
               uiSliderValuePosition="0" uiSliderValueHeight="12" uiSliderValueWidth="64"
               uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3" uiSliderThumbWidth="0"
               uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0" uiSliderThumbFlatOnRight="0"
               uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0" uiSliderValueTextColour="ffffffff"
               uiSliderValueBgColour="ffffff" uiSliderRotaryOutlineColour="ffff0000"
               uiSliderRotaryFillColour="ffff0000" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="ffffff"
               uiSliderTrackColour="0xff0f0f0f" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;0"
               uiSliderValueTextJustification="centred" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" componentLayerUid="356c3936160000005b0000006e000000"
               componentRectangle="88 8 80 80" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="255" vstIndex="3" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="m1Dampen" modulatorMin="0" modulatorValue="127">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,92,-1:CC,ByteValue,LSB7bitValue,93,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName="M1 Dampen"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="0.5" componentEffectColour="0xff000000"
               componentEffectOffsetX="7.5" componentEffectOffsetY="15" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;0"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;0" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               uiSliderStyle="RotaryVerticalDrag" uiSliderMin="0" uiSliderMax="255"
               uiSliderInterval="1" uiSliderDoubleClickEnabled="1" uiSliderDoubleClickValue="0"
               uiSliderValuePosition="0" uiSliderValueHeight="12" uiSliderValueWidth="64"
               uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3" uiSliderThumbWidth="0"
               uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0" uiSliderThumbFlatOnRight="0"
               uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0" uiSliderValueTextColour="ffffffff"
               uiSliderValueBgColour="ffffff" uiSliderRotaryOutlineColour="ffff0000"
               uiSliderRotaryFillColour="ffff0000" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="ffffff"
               uiSliderTrackColour="0xff0f0f0f" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;0"
               uiSliderValueTextJustification="centred" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" uiType="uiSlider"
               componentRectangle="168 8 80 80" componentLayerUid="356c3936160000005b0000006e000000"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="255" vstIndex="4" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="m2Pitch" modulatorMin="0" modulatorValue="66">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,94,-1:CC,ByteValue,LSB7bitValue,95,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName="M2 Pitch"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;0"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;0" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               uiSliderStyle="RotaryVerticalDrag" uiSliderMin="0" uiSliderMax="255"
               uiSliderInterval="1" uiSliderDoubleClickEnabled="1" uiSliderDoubleClickValue="0"
               uiSliderValuePosition="0" uiSliderValueHeight="12" uiSliderValueWidth="64"
               uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3" uiSliderThumbWidth="0"
               uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0" uiSliderThumbFlatOnRight="0"
               uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0" uiSliderValueTextColour="ffffffff"
               uiSliderValueBgColour="ffffff" uiSliderRotaryOutlineColour="ffff0000"
               uiSliderRotaryFillColour="ffff0000" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="ffffff"
               uiSliderTrackColour="0xff0f0f0f" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;0"
               uiSliderValueTextJustification="centred" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" uiType="uiSlider"
               componentRectangle="88 96 80 80" componentLayerUid="356c3936160000005b0000006e000000"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="255" vstIndex="5" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="m2Dampen" modulatorMin="0" modulatorValue="83">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,96,-1:CC,ByteValue,LSB7bitValue,97,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName="M2 Dampen"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="0.5" componentEffectColour="0xff000000"
               componentEffectOffsetX="7.5" componentEffectOffsetY="15" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;0"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;0" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               uiSliderStyle="RotaryVerticalDrag" uiSliderMin="0" uiSliderMax="255"
               uiSliderInterval="1" uiSliderDoubleClickEnabled="1" uiSliderDoubleClickValue="0"
               uiSliderValuePosition="0" uiSliderValueHeight="12" uiSliderValueWidth="64"
               uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3" uiSliderThumbWidth="0"
               uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0" uiSliderThumbFlatOnRight="0"
               uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0" uiSliderValueTextColour="ffffffff"
               uiSliderValueBgColour="ffffff" uiSliderRotaryOutlineColour="ffff0000"
               uiSliderRotaryFillColour="ffff0000" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="ffffff"
               uiSliderTrackColour="0xff0f0f0f" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;0"
               uiSliderValueTextJustification="centred" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" componentLayerUid="356c3936160000005b0000006e000000"
               componentRectangle="168 96 80 80" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="255" vstIndex="6" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="m1_2Couplg" modulatorMin="0" modulatorValue="127">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,100,-1:CC,ByteValue,LSB7bitValue,101,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName="M1_2 Couplg"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="0.5" componentEffectColour="0xff000000"
               componentEffectOffsetX="7.5" componentEffectOffsetY="15" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;0"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;0" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               uiSliderStyle="RotaryVerticalDrag" uiSliderMin="0" uiSliderMax="255"
               uiSliderInterval="1" uiSliderDoubleClickEnabled="1" uiSliderDoubleClickValue="0"
               uiSliderValuePosition="0" uiSliderValueHeight="12" uiSliderValueWidth="64"
               uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3" uiSliderThumbWidth="0"
               uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0" uiSliderThumbFlatOnRight="0"
               uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0" uiSliderValueTextColour="ffffffff"
               uiSliderValueBgColour="ffffff" uiSliderRotaryOutlineColour="ffff0000"
               uiSliderRotaryFillColour="ffff0000" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="ffffff"
               uiSliderTrackColour="0xff0f0f0f" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;0"
               uiSliderValueTextJustification="centred" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" componentLayerUid="356c3936160000005b0000006e000000"
               componentRectangle="8 8 80 80" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="255" vstIndex="7" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="m2_1Couplg" modulatorMin="0" modulatorValue="55">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,102,-1:CC,ByteValue,LSB7bitValue,103,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName="M2_1 Couplg"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="0.5" componentEffectColour="0xff000000"
               componentEffectOffsetX="7.5" componentEffectOffsetY="15" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;0"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;0" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               uiSliderStyle="RotaryVerticalDrag" uiSliderMin="0" uiSliderMax="255"
               uiSliderInterval="1" uiSliderDoubleClickEnabled="1" uiSliderDoubleClickValue="0"
               uiSliderValuePosition="0" uiSliderValueHeight="12" uiSliderValueWidth="64"
               uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3" uiSliderThumbWidth="0"
               uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0" uiSliderThumbFlatOnRight="0"
               uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0" uiSliderValueTextColour="ffffffff"
               uiSliderValueBgColour="ffffff" uiSliderRotaryOutlineColour="ffff0000"
               uiSliderRotaryFillColour="ffff0000" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="ffffff"
               uiSliderTrackColour="0xff0f0f0f" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;0"
               uiSliderValueTextJustification="centred" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" uiType="uiSlider"
               componentRectangle="8 96 80 80" componentLayerUid="356c3936160000005b0000006e000000"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="8" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="noise" modulatorMin="0" modulatorValue="64">
    <midi midiMessageType="0" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="109" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName="Noise"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;0"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;0" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               uiSliderStyle="RotaryVerticalDrag" uiSliderMin="0" uiSliderMax="127"
               uiSliderInterval="1" uiSliderDoubleClickEnabled="1" uiSliderDoubleClickValue="0"
               uiSliderValuePosition="0" uiSliderValueHeight="12" uiSliderValueWidth="64"
               uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3" uiSliderThumbWidth="0"
               uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0" uiSliderThumbFlatOnRight="0"
               uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0" uiSliderValueTextColour="ffffffff"
               uiSliderValueBgColour="ffffff" uiSliderRotaryOutlineColour="ffff0000"
               uiSliderRotaryFillColour="ffff0000" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="ffffff"
               uiSliderTrackColour="0xff0f0f0f" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;0"
               uiSliderValueTextJustification="centred" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" componentLayerUid="356c3936160000005b0000006e000000"
               componentRectangle="8 192 80 80" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="9" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="noiseFilter" modulatorMin="0" modulatorValue="90">
    <midi midiMessageType="0" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="112" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName="Noise Filter"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;0"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;0" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               uiSliderStyle="RotaryVerticalDrag" uiSliderMin="0" uiSliderMax="127"
               uiSliderInterval="1" uiSliderDoubleClickEnabled="1" uiSliderDoubleClickValue="0"
               uiSliderValuePosition="0" uiSliderValueHeight="12" uiSliderValueWidth="64"
               uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3" uiSliderThumbWidth="0"
               uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0" uiSliderThumbFlatOnRight="0"
               uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0" uiSliderValueTextColour="ffffffff"
               uiSliderValueBgColour="ffffff" uiSliderRotaryOutlineColour="ffff0000"
               uiSliderRotaryFillColour="ffff0000" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="ffffff"
               uiSliderTrackColour="0xff0f0f0f" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;0"
               uiSliderValueTextJustification="centred" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" uiType="uiSlider"
               componentRectangle="8 280 80 80" componentLayerUid="356c3936160000005b0000006e000000"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="255" vstIndex="10" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="metaNoiseA" modulatorMin="0" modulatorValue="65">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,106,-1:CC,ByteValue,LSB7bitValue,107,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName="Metal Noise A"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;0"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;0" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               uiSliderStyle="RotaryVerticalDrag" uiSliderMin="0" uiSliderMax="255"
               uiSliderInterval="1" uiSliderDoubleClickEnabled="1" uiSliderDoubleClickValue="0"
               uiSliderValuePosition="0" uiSliderValueHeight="12" uiSliderValueWidth="64"
               uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3" uiSliderThumbWidth="0"
               uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0" uiSliderThumbFlatOnRight="0"
               uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0" uiSliderValueTextColour="ffffffff"
               uiSliderValueBgColour="ffffff" uiSliderRotaryOutlineColour="ffff0000"
               uiSliderRotaryFillColour="ffff0000" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="ffffff"
               uiSliderTrackColour="0xff0f0f0f" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;0"
               uiSliderValueTextJustification="centred" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" componentLayerUid="356c3936160000005b0000006e000000"
               componentRectangle="88 192 80 80" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="255" vstIndex="11" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="metaNoiseB" modulatorMin="0" modulatorValue="136">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,115,-1:CC,ByteValue,LSB7bitValue,116,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName="Metal Noise B"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;0"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;0" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               uiSliderStyle="RotaryVerticalDrag" uiSliderMin="0" uiSliderMax="255"
               uiSliderInterval="1" uiSliderDoubleClickEnabled="1" uiSliderDoubleClickValue="0"
               uiSliderValuePosition="0" uiSliderValueHeight="12" uiSliderValueWidth="64"
               uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3" uiSliderThumbWidth="0"
               uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0" uiSliderThumbFlatOnRight="0"
               uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0" uiSliderValueTextColour="ffffffff"
               uiSliderValueBgColour="ffffff" uiSliderRotaryOutlineColour="ffff0000"
               uiSliderRotaryFillColour="ffff0000" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="ffffff"
               uiSliderTrackColour="0xff0f0f0f" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;0"
               uiSliderValueTextJustification="centred" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" uiType="uiSlider"
               componentRectangle="88 280 80 80" componentLayerUid="356c3936160000005b0000006e000000"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="12" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="gate" modulatorMin="0" modulatorValue="45">
    <midi midiMessageType="0" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="114" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName="Gate"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               uiSliderStyle="RotaryVerticalDrag" uiSliderMin="0" uiSliderMax="127"
               uiSliderInterval="1" uiSliderDoubleClickEnabled="1" uiSliderDoubleClickValue="0"
               uiSliderValuePosition="0" uiSliderValueHeight="12" uiSliderValueWidth="64"
               uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3" uiSliderThumbWidth="0"
               uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0" uiSliderThumbFlatOnRight="0"
               uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0" uiSliderValueTextColour="ffffffff"
               uiSliderValueBgColour="ffffff" uiSliderRotaryOutlineColour="ffff0000"
               uiSliderRotaryFillColour="ffff0000" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="ffffff"
               uiSliderTrackColour="0xff0f0f0f" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" componentLayerUid="356c3936160000005b0000006e000000"
               componentRectangle="304 280 80 80" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="13" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="volume" modulatorMin="0" modulatorValue="105">
    <midi midiMessageType="0" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="117" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName="Volume"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               uiSliderStyle="RotaryVerticalDrag" uiSliderMin="0" uiSliderMax="127"
               uiSliderInterval="1" uiSliderDoubleClickEnabled="1" uiSliderDoubleClickValue="0"
               uiSliderValuePosition="0" uiSliderValueHeight="12" uiSliderValueWidth="64"
               uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3" uiSliderThumbWidth="0"
               uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0" uiSliderThumbFlatOnRight="0"
               uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0" uiSliderValueTextColour="ffffffff"
               uiSliderValueBgColour="ffffff" uiSliderRotaryOutlineColour="ffff0000"
               uiSliderRotaryFillColour="ffff0000" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="ffffff"
               uiSliderTrackColour="0xff0f0f0f" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;3"
               uiSliderValueTextJustification="centred" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" uiType="uiSlider"
               componentRectangle="480 280 80 80" componentLayerUid="356c3936160000005b0000006e000000"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="7" vstIndex="14" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="lfoWave" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="0" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="119" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;0" componentVisibleName="LFO Wave"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;0"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;0" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               uiComboArrowColour="0xff0000ff" uiComboOutlineColour="0xff0000ff"
               uiComboTextColour="0xff000000" uiComboTextJustification="centred"
               uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;0" uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;0"
               uiComboButtonColour="0xff0000ff" uiComboBgColour="0xffffffff"
               uiComboMenuBackgroundColour="0xfff0f0f0" uiComboMenuFontColour="0xff000000"
               uiComboMenuHighlightColour="ffadd8e6" uiComboMenuFontHighlightedColour="0xff232323"
               uiComboContent="Saw up&#10;Saw down&#10;Sine asc&#10;Sine desc&#10;Triangualr asc&#10;Trangualr desc&#10;Rectengualr min-max&#10;Rectengualr max-min"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiType="uiCombo" componentRectangle="304 8 256 40"
               componentLayerUid="356c3936160000005b0000006e000000"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="3" vstIndex="15" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="lfoWave-1" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="0" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="120" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;0;0" componentVisibleName="LFO Select"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;0"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;0" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               uiComboArrowColour="0xff0000ff" uiComboOutlineColour="0xff0000ff"
               uiComboTextColour="0xff000000" uiComboTextJustification="centred"
               uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;0" uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;0"
               uiComboButtonColour="0xff0000ff" uiComboBgColour="0xffffffff"
               uiComboMenuBackgroundColour="0xfff0f0f0" uiComboMenuFontColour="0xff000000"
               uiComboMenuHighlightColour="ffadd8e6" uiComboMenuFontHighlightedColour="0xff232323"
               uiComboContent="LFO Off&#10;LFO to T-OSC M1=32&#10;LFO to T-OSC M2=64&#10;LFO to T-OSC M1 and M2=96"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" componentLayerUid="356c3936160000005b0000006e000000"
               componentRectangle="304 64 256 40" uiType="uiCombo"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="17" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="volume-1" modulatorMin="0" modulatorValue="85">
    <midi midiMessageType="0" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="121" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName="LFO Intensity"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;0"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;0" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               uiSliderStyle="RotaryVerticalDrag" uiSliderMin="0" uiSliderMax="127"
               uiSliderInterval="1" uiSliderDoubleClickEnabled="1" uiSliderDoubleClickValue="0"
               uiSliderValuePosition="0" uiSliderValueHeight="12" uiSliderValueWidth="64"
               uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3" uiSliderThumbWidth="0"
               uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0" uiSliderThumbFlatOnRight="0"
               uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0" uiSliderValueTextColour="ffffffff"
               uiSliderValueBgColour="ffffff" uiSliderRotaryOutlineColour="ffff0000"
               uiSliderRotaryFillColour="ffff0000" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="ffffff"
               uiSliderTrackColour="0xff0f0f0f" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="0xffffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;0"
               uiSliderValueTextJustification="centred" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" componentLayerUid="356c3936160000005b0000006e000000"
               componentRectangle="304 112 80 80" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="18" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="volume-2" modulatorMin="0" modulatorValue="72">
    <midi midiMessageType="0" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="122" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName="LFO Speed"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;0"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;0" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               uiSliderStyle="RotaryVerticalDrag" uiSliderMin="0" uiSliderMax="127"
               uiSliderInterval="1" uiSliderDoubleClickEnabled="1" uiSliderDoubleClickValue="0"
               uiSliderValuePosition="0" uiSliderValueHeight="12" uiSliderValueWidth="64"
               uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3" uiSliderThumbWidth="0"
               uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0" uiSliderThumbFlatOnRight="0"
               uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0" uiSliderValueTextColour="ffffffff"
               uiSliderValueBgColour="ffffff" uiSliderRotaryOutlineColour="ffff0000"
               uiSliderRotaryFillColour="ffff0000" uiSliderThumbColour="0xffff0000"
               uiSliderValueHighlightColour="0xff0000ff" uiSliderValueOutlineColour="ffffff"
               uiSliderTrackColour="0xff0f0f0f" uiSliderIncDecButtonColour="0xff0000ff"
               uiSliderIncDecTextColour="ffffff" uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;0"
               uiSliderValueTextJustification="centred" uiSliderVelocitySensitivity="1"
               uiSliderVelocityThreshold="1" uiSliderVelocityOffset="0" uiSliderVelocityMode="0"
               uiSliderVelocityModeKeyTrigger="1" uiSliderSpringMode="0" uiSliderSpringValue="0"
               uiSliderMouseWheelInterval="1" uiSliderPopupBubble="0" uiType="uiSlider"
               componentRectangle="384 112 80 80" componentLayerUid="356c3936160000005b0000006e000000"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="modulator-4" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;3" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="16.1" componentEffectColour="ffff8a8a"
               componentEffectOffsetX="6" componentEffectOffsetY="4.7" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               uiLabelBgColour="0x00000000" uiLabelTextColour="ffffffff" uiLabelOutline="0"
               uiLabelOutlineColour="0x00000000" uiLabelJustification="centred"
               uiLabelFitFont="0" uiLabelFont="60sekuntia;40;0;0;0;0;1;2" uiLabelText="j OMOX - m.Brane 11"
               uiLabelDisplaysAllValues="0" uiLabelDisplayFormat="%n(%N) = %v(%h)"
               uiLabelInputHighlightTextColour="0xffffffff" uiLabelInputHighlightColour="0xff0000ff"
               uiLabelEditOnSingleClick="0" uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               uiType="uiLabel" componentRectangle="166 193 430 67" componentLayerUid="356c3936160000005b0000006e000000"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="19" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="lfoOneShot" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="0" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="123" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;0" componentVisibleName="modulator-1"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" componentLuaMouseMoved="-- None"
               uiButtonTextColourOn="ffffffff" uiToggleButtonText="LFO One Shot"
               uiButtonTrueValue="64" uiButtonFalseValue="0" uiButtonColourOff="ffff0000"
               componentRectangle="464 128 120 48" componentLayerUid="356c3936160000005b0000006e000000"
               uiType="uiToggleButton"/>
  </modulator>
</panel>
