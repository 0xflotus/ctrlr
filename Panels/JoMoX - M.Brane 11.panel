<?xml version="1.0" encoding="UTF-8"?>

<panel name="JoMoX M.Brane 11" panelShowDialogs="1" panelMessageTime="10000"
       panelAuthorName="Roman Kubiak" panelAuthorEmail="kubiak.roman@gmail.com"
       panelAuthorUrl="http://ctrlr.org" panelAuthorDesc="" panelVersionMajor="1"
       panelVersionMinor="0" panelVersionName="Hell-O-Kitty" panelVendor=""
       panelDevice="" panelMidiSnapshotAfterLoad="0" panelMidiSnapshotAfterProgramChange="0"
       panelMidiSnapshotDelay="10" panelMidiInputChannelDevice="1" panelMidiInputDevice="-- None"
       panelMidiControllerChannelDevice="1" panelMidiControllerDevice="-- None"
       panelMidiOutputChannelDevice="1" panelMidiOutputDevice="-- None"
       panelMidiInputFromHost="0" panelMidiInputChannelHost="1" panelMidiOutputToHost="0"
       panelMidiOutputChannelHost="1" panelMidiThruH2H="0" panelMidiThruH2HChannelize="0"
       panelMidiThruH2D="0" panelMidiThruH2DChannelize="0" panelMidiThruD2D="0"
       panelMidiThruD2DChannelize="0" panelMidiThruD2H="0" panelMidiThruD2HChannelize="0"
       panelMidiRealtimeIgnore="1" panelMidiInputThreadPriority="7"
       panelMidiProgram="0" panelMidiBankLsb="0" panelMidiBankMsb="0"
       panelMidiSendProgramChangeOnLoad="0" panelMidiProgramCalloutOnprogramChange="0"
       panelMidiMatchCacheSize="32" panelMidiGlobalDelay="0" luaPanelMidiChannelChanged="-- None"
       luaPanelMidiReceived="-- None" luaPanelLoaded="-- None" luaPanelBeforeLoad="-- None"
       luaPanelSaved="-- None" luaPanelResourcesLoaded="-- None" luaPanelProgramChanged="-- None"
       luaPanelGlobalChanged="-- None" luaPanelMessageHandler="-- None"
       luaPanelModulatorValueChanged="-- None" panelFilePath="/home/r.kubiak/devel/ctrlr/Panels/JoMoX - M.Brane 11.panel"
       panelUID="8.JfP5OBH3gAB" panelInstanceUID="HryD" panelInstanceManufacturerID="sbza"
       panelModulatorListColumns="-- None" panelModulatorListCsvDelimiter=","
       panelModulatorListXmlRoot="ctrlrModulatorList" panelModulatorListXmlModulator="ctrlrModulator"
       panelModulatorListSortOption="1" panelGlobalVariables="-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1:-1"
       panelResources="-- None" panelPropertyDisplayIDs="0" ctrlrMenuItemBackgroundColour="ffffffff"
       ctrlrMenuItemTextColour="ff000000" ctrlrMenuItemHighlightedTextColour="ffffffff"
       ctrlrMenuItemHighlightColour="ff4364ff" ctrlrMenuItemFont="&lt;Sans-Serif&gt;;18;0;0;0;0;1;0"
       ctrlrMenuItemSeparatorColour="44000000" ctrlrMenuItemHeaderColour="ff000000"
       ctrlrMenuBarBackgroundColour1="fff7f7f7" ctrlrMenuBarBackgroundColour2="ffcccccc"
       ctrlrMenuBarTextColour="ff000000" ctrlrMenuBarHighlightedTextColour="ffffffff"
       ctrlrMenuBarHighlightColour="ff4364ff" ctrlrMenuBarFont="&lt;Sans-Serif&gt;;18;0;0;0;0;1;0"
       ctrlrUseEditorWrapper="0" panelIndex="0" uiLuaConsoleSnips="setLookAndFeel (panel:getCanvas(), CustomLookAndFeel())">
  <uiWindowManager>
    <uiChildWindow uiChildWindowName="LuaMethodEditor" uiChildWindowState="1920 27 1920 1052">
      <uiChildWindowContentState luaMethodEditor="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#13;&#10;&#13;&#10;&lt;OPEN id=&quot;LUA&quot; scrollPos=&quot;0&quot;&gt;&#13;&#10;  &lt;SELECTED id=&quot;/LUA/CustomLookAndFeel&quot;/&gt;&#13;&#10;&lt;/OPEN&gt;&#13;&#10;;67b7cddc597140ef98739550fa17ead0"/>
    </uiChildWindow>
    <uiChildWindow uiChildWindowName="LuaConsole" uiChildWindowState="592 506 800 500">
      <uiChildWindowContentState/>
    </uiChildWindow>
  </uiWindowManager>
  <midiLibrary uuid="8ebcc930a4de49a3ae0c5a8cf8d28dab" luaTransInfo="-- None"
               midiLibraryParameterIndexProperty="modulatorCustomIndex" midiLibraryMidiProgramChangeControl="0"
               midiLibrarySendSnapAfterPChg="0" midiLibraryDefaultBankName="New Bank - %H:%M:%S"
               midiLibraryDefaultProgramName="New Program - %H:%M:%S" midiLibraryDefaultSnapshotName="Snapshot - %H:%M:%S"
               midiLibraryCustomRequests="">
    <midiLibrarySnapshots name="Snapshots"/>
    <midiLibraryFirmware name="Firmware"/>
    <midiLibraryEditBuffer name="Edit buffer"/>
    <midiLibraryTransactions name="Transactions">
      <trans name="Request Identity" enabled="1" internal="1" transCap="midiLibrary"
             timeout="1000" transReqFormulaPrefix="F0 7E 7F 06 01" transReqFormulaSuffix="F7"
             transRespSizeCheck="0" transReqDataLen="0" transReqExists="1"
             transConfExists="0" transRespFormulaPrefix="F0 7E 7F 06 02" transRespFormulaSuffix="F7"
             transRespDataLen="8" transRespDataCheck="1" transRespExists="1"/>
      <trans name="Request Identity [LUA]" enabled="1" internal="1" transCap="midiLibrary"
             timeout="1000" transReqFormulaPrefix="" transReqFormulaSuffix=""
             transReqDataLen="0" transReqExists="1" transConfExists="0" transRespFormulaPrefix=""
             transRespFormulaSuffix="" transRespDataLen="8" transRespDataCheck="0"
             transRespSizeCheck="0" transRespExists="1" luaTransRequest="transIdReq"
             luaTransProcess="transIdProc"/>
      <trans name="Send SYX file" enabled="1" internal="1" transCap="midiLibrary"
             timeout="1000" transReqFormulaPrefix="" transReqFormulaSuffix=""
             transReqDataLen="0" transReqExists="1" transConfExists="0" transRespFormulaPrefix=""
             transRespFormulaSuffix="" transRespDataLen="0" transRespDataCheck="0"
             transRespExists="0" luaTransRequest="transSYXSendReq"/>
      <trans name="Recieve SYX file" enabled="1" internal="1" transCap="midiLibrary"
             timeout="1000" transReqFormulaPrefix="" transReqFormulaSuffix=""
             transReqDataLen="0" transReqExists="1" transConfExists="0" transRespFormulaPrefix=""
             transRespFormulaSuffix="" transRespDataLen="0" transRespDataCheck="0"
             transRespExists="1" luaTransRequest="transSYXRcvReq" luaTransProcess="transSYXRcvProc"/>
    </midiLibraryTransactions>
  </midiLibrary>
  <luaManager>
    <luaManagerMethods>
      <luaMethodGroup name="Built-In" uuid="d6acca60ab0f4c49939951e4192bdaab">
        <luaMethod luaMethodName="table_dump" luaMethodCode="--&#13;&#10;-- Print table contents&#13;&#10;--&#13;&#10;function table_dump(table)&#13;&#10;&#9;for key,value in ipairs(table) do&#13;&#10;&#9;&#9;debug (&quot;KEY= [&quot;..key..&quot;]&quot;)&#13;&#10;&#13;&#10;&#9;&#9;if (type(value) == &quot;table&quot;) then&#13;&#10;&#9;&#9;&#9;table_dump(value)&#13;&#10;&#9;&#9;elseif (type(value) == &quot;nil&quot;) then&#13;&#10;&#9;&#9;&#9;debug (&quot; = NIL&quot;)&#13;&#10;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;what (value)&#13;&#10;&#9;&#9;end&#13;&#10;&#9;end&#13;&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="00000000000000000000000000000001"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="what" luaMethodCode="--&#13;&#10;-- Print methods for an object&#13;&#10;--&#13;&#10;function what(o)&#13;&#10;&#9;info = class_info(o)&#13;&#10;&#9;if info ~= nil then&#13;&#10;&#9;&#9;ret = &quot;Object type [&quot; .. info.name .. &quot;]\n-----------------------------------------------------------------\n\n&quot;..&quot;Members:\n&quot;&#13;&#10;&#13;&#10;&#9;&#9;if info.name == &quot;table&quot; then&#13;&#10;&#9;&#9;&#9;table_dump(o)&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;for k, v in pairs(info.methods) do&#13;&#10;&#9;&#9;&#9;ret = ret .. string.format (&quot;\t%30s:\t%5s\n&quot;, k, type(v))&#13;&#10;&#9;&#9;end&#13;&#10;&#9;&#9;ret = ret .. &quot;\n\nAttributes:\n&quot;&#13;&#10;&#9;&#9;for k, v in pairs(info.attributes) do&#13;&#10;&#9;&#9;&#9;ret = ret .. string.format (&quot;\t%30s:\t%5s\n&quot;, k, type(v))&#13;&#10;&#9;&#9;end&#13;&#10;&#9;&#9;ret = ret .. &quot;\n-----------------------------------------------------------------&quot;&#13;&#10;&#9;end&#13;&#10;&#13;&#10;&#9;debug (ret)&#13;&#10;&#9;return ret&#13;&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="00000000000000000000000000000002"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="how" luaMethodCode="--&#13;&#10;-- Print all available classes&#13;&#10;--&#13;&#10;function how()&#13;&#10;&#9;ret = &quot;Available classes:\n&quot;&#13;&#10;&#9;ret = ret .. &quot;\n-----------------------------------------------------------------&quot;&#13;&#10;&#9;for i,v in ipairs(class_names()) do&#13;&#10;&#9;&#9;ret = ret .. &quot;\t&quot;.. v .. &quot;\n&quot;&#13;&#10;&#9;end&#13;&#10;&#9;ret = ret .. &quot;\n-----------------------------------------------------------------&quot;&#13;&#10;&#9;debug (ret)&#13;&#10;&#9;return ret&#13;&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="00000000000000000000000000000003"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="transSYXSendReq" luaMethodCode="function transSYXSendReq(transaction)&#13;&#10;&#9;console(&quot;transSYXSendReq&quot;)&#13;&#10;&#9;fileToSend = utils.openFileWindow(&quot;SYX file to send&quot;, File.getSpecialLocation(File.userHomeDirectory), &quot;*.*&quot;, true)&#13;&#10;&#13;&#10;&#9;if fileToSend:existsAsFile() then&#13;&#10;&#9;&#9;result = MemoryBlock (0, true)&#13;&#10;&#9;&#9;fileToSend:loadFileAsData (result)&#13;&#10;&#13;&#10;&#9;&#9;if result:getSize() &lt;= 0 then&#13;&#10;&#9;&#9;&#9;utils.warnWindow (&quot;Send SYX File&quot;, &quot;Reading the file resultet in 0 data bytes&quot;)&#13;&#10;&#9;&#9;&#9;return&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;&#9;&#9;debug (&quot;sending file: &quot;..fileToSend:getFullPathName())&#13;&#10;&#13;&#10;&#9;&#9;transaction:setRequest (result)&#13;&#10;&#9;else&#13;&#10;&#9;&#9;utils.warnWindow (&quot;Send SYX File&quot;, &quot;Can't read selected file&quot;)&#13;&#10;&#9;end&#13;&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="00000000000000000000000000000004"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="transSYXRcvReq" luaMethodCode="function transSYXRcvReq(transaction)&#13;&#10;&#9;console(&quot;transSYXRcvReq&quot;)&#13;&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="00000000000000000000000000000005"
                   luaMethodValid="1"/>
        <luaMethod luaMethodName="transSYXRcvProc" luaMethodCode="function transSYXRcvProc(transaction)&#13;&#10;&#9;console(&quot;transSYXRcvProc&quot;)&#13;&#10;end"
                   luaMethodLinkedProperty="" luaMethodSource="0" uuid="00000000000000000000000000000006"
                   luaMethodValid="1"/>
      </luaMethodGroup>
      <luaMethod luaMethodName="CustomLookAndFeel" luaMethodCode="class 'CustomLookAndFeel' (LookAndFeel_V3)&#13;&#10;&#13;&#10;function CustomLookAndFeel:__init()&#13;&#10;&#9;--&#13;&#10;&#9;-- This is needed for luabind, please don't remove this line&#13;&#10;&#9;-- Add as much code as you like here, just leave this&#13;&#10;&#9;--&#13;&#10;&#9;LookAndFeel_V3.__init(self)&#13;&#10;end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:findColour (--[[int]] colourId)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;&#9;-- returnValue = Colour()&#13;&#10;&#9;-- return returnValue&#13;&#10;--end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:setColour (--[[int]] colourId, --[[Colour]] colour)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;-- end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:isColourSpecified (--[[int]] colourId)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;&#9;-- returnValue = true&#13;&#10;&#9;-- return returnValue&#13;&#10;--end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:getTypefaceForFont (--[[Font]] font)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;&#9;-- returnValue = Typeface::Ptr()&#13;&#10;&#9;-- return returnValue&#13;&#10;--end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:getMouseCursorFor (--[[Component]] component)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;&#9;-- returnValue = MouseCursor()&#13;&#10;&#9;-- return returnValue&#13;&#10;--end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:drawButtonBackground (--[[Graphics]] g, --[[Button]] b, --[[Colour]] c, --[[bool]] over, --[[bool]] down)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;-- end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:drawButtonText (--[[Graphics]] g, --[[TextButton]] button, --[[bool]] isMouseOverButton, --[[bool]] isButtonDown)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;-- end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:drawToggleButton (--[[Graphics]] g, --[[ToggleButton]] button, --[[bool]] isMouseOverButton, --[[bool]] isButtonDown)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;-- end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:changeToggleButtonWidthToFitText (--[[ToggleButton]] button)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;-- end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:drawTickBox (--[[Graphics]] g, --[[Component]] component, --[[float]] x, --[[float]] y, --[[float]] w, --[[float]] h, --[[bool]] ticked, --[[bool]] isEnabled, --[[bool]] isMouseOverButton, --[[bool]] isButtonDown)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;-- end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:createAlertWindow (--[[String]] title, --[[String]] message, --[[String]] button1, --[[String]] button2, --[[String]] button3, --[[AlertWindow::AlertIconType]] iconType, --[[int]] numButtons, --[[Component*]] associatedComponent)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;&#9;-- returnValue = AlertWindow()&#13;&#10;&#9;-- return returnValue&#13;&#10;--end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:drawAlertBox (--[[Graphics]] g, --[[AlertWindow]] window, --[[Rectangle]] textArea, --[[TextLayout]] layout)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;-- end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:getAlertBoxWindowFlags ()&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;&#9;-- returnValue == 1&#13;&#10;&#9;-- return returnValue&#13;&#10;--end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:getAlertWindowButtonHeight ()&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;&#9;-- returnValue == 1&#13;&#10;&#9;-- return returnValue&#13;&#10;--end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:getAlertWindowMessageFont ()&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;&#9;-- returnValue = Font()&#13;&#10;&#9;-- return returnValue&#13;&#10;--end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:getAlertWindowFont ()&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;&#9;-- returnValue = Font()&#13;&#10;&#9;-- return returnValue&#13;&#10;--end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:drawProgressBar (--[[Graphics]] g, --[[ProgressBar]] bar, --[[int]] width, --[[int]] height, --[[double]] progress, --[[String]] textToShow)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;-- end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:drawSpinningWaitAnimation (--[[Graphics]] g, --[[Colour]] colour, --[[int]] x, --[[int]] y, --[[int]] w, --[[int]] h)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;-- end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:areScrollbarButtonsVisible ()&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;&#9;-- returnValue = true&#13;&#10;&#9;-- return returnValue&#13;&#10;--end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:getScrollbarEffect ()&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;&#9;-- returnValue = ImageEffectFilter()&#13;&#10;&#9;-- return returnValue&#13;&#10;--end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:getMinimumScrollbarThumbSize (--[[ScrollBar]] bar)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;&#9;-- returnValue == 1&#13;&#10;&#9;-- return returnValue&#13;&#10;--end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:getDefaultScrollbarWidth ()&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;&#9;-- returnValue == 1&#13;&#10;&#9;-- return returnValue&#13;&#10;--end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:getScrollbarButtonSize (--[[ScrollBar]] bar)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;&#9;-- returnValue == 1&#13;&#10;&#9;-- return returnValue&#13;&#10;--end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:getTickShape (--[[float]] height)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;&#9;-- returnValue = Path()&#13;&#10;&#9;-- return returnValue&#13;&#10;--end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:getCrossShape (--[[float]] height)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;&#9;-- returnValue = Path()&#13;&#10;&#9;-- return returnValue&#13;&#10;--end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:drawTreeviewPlusMinusBox (--[[Graphics]] g, --[[Rectangle]] area, --[[Colour]] backgroundColour, --[[bool]] isOpen, --[[bool]] isMouseOver)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;-- end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:fillTextEditorBackground (--[[Graphics]] g, --[[int]] width, --[[int]] height, --[[TextEditor]] editor)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;-- end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:drawTextEditorOutline (--[[Graphics]] g, --[[int]] width, --[[int]] height, --[[TextEditor]] editor)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;-- end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:createCaretComponent (--[[Component*]] keyFocusOwner)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;&#9;-- returnValue = CaretComponent()&#13;&#10;&#9;-- return returnValue&#13;&#10;--end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:getDefaultFolderImage ()&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;&#9;-- returnValue = Drawable()&#13;&#10;&#9;-- return returnValue&#13;&#10;--end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:getDefaultDocumentFileImage ()&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;&#9;-- returnValue = Drawable()&#13;&#10;&#9;-- return returnValue&#13;&#10;--end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:createFileChooserHeaderText (--[[String]] title, --[[String]] instructions)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;&#9;-- returnValue = AttributedString()&#13;&#10;&#9;-- return returnValue&#13;&#10;--end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:drawFileBrowserRow (--[[Graphics]] g, --[[int]] width, --[[int]] height, --[[String]] filename, --[[Image*]] icon, --[[String]] fileSizeDescription, --[[String]] fileTimeDescription, --[[bool]] isDirectory, --[[bool]] isItemSelected, --[[int]] itemIndex, --[[DirectoryContentsDisplayComponent]] component)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;-- end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:createFileBrowserGoUpButton ()&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;&#9;-- returnValue = Button()&#13;&#10;&#9;-- return returnValue&#13;&#10;--end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:layoutFileBrowserComponent (--[[FileBrowserComponent]] component, --[[DirectoryContentsDisplayComponent*]] contentsComponent, --[[FilePreviewComponent*]] previewComponent, --[[ComboBox*]] currentPathBox, --[[TextEditor*]] filenameBox, --[[Button*]] goUpButton)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;-- end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:drawBubble (--[[Graphics]] g, --[[BubbleComponent]] bubble, --[[Point]] tip, --[[Rectangle]] body)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;-- end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:drawLasso (--[[Graphics]] g, --[[Component]] component)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;-- end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:drawPopupMenuBackground (--[[Graphics]] g, --[[int]] width, --[[int]] height)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;-- end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:drawPopupMenuItem (--[[Graphics]] g, --[[Rectangle]] area, --[[bool]] isSeparator, --[[bool]] isActive, --[[bool]] isHighlighted, --[[bool]] isTicked, --[[bool]] hasSubMenu, --[[String]] text, --[[String]] shortcutKeyText, --[[Drawable*]] icon, --[[Colour*]] textColour)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;-- end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:getPopupMenuFont ()&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;&#9;-- returnValue = Font()&#13;&#10;&#9;-- return returnValue&#13;&#10;--end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:drawPopupMenuUpDownArrow (--[[Graphics]] g, --[[int]] width, --[[int]] height, --[[bool]] isScrollUpArrow)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;-- end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:getIdealPopupMenuItemSize (--[[String]] text, --[[bool]] isSeparator, --[[int]] standardMenuItemHeight, --[[int]] idealWidth, --[[int]] idealHeight)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;-- end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:getMenuWindowFlags ()&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;&#9;-- returnValue == 1&#13;&#10;&#9;-- return returnValue&#13;&#10;--end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:drawMenuBarBackground (--[[Graphics]] g, --[[int]] width, --[[int]] height, --[[bool]] isMouseOverBar, --[[MenuBarComponent]] component)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;-- end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:getMenuBarItemWidth (--[[MenuBarComponent]] component, --[[int]] itemIndex, --[[String]] itemText)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;&#9;-- returnValue == 1&#13;&#10;&#9;-- return returnValue&#13;&#10;--end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:getMenuBarFont (--[[MenuBarComponent]] component, --[[int]] itemIndex, --[[String]] itemText)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;&#9;-- returnValue = Font()&#13;&#10;&#9;-- return returnValue&#13;&#10;--end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:drawMenuBarItem (--[[Graphics]] g, --[[int]] width, --[[int]] height, --[[int]] itemIndex, --[[String]] itemText, --[[bool]] isMouseOverItem, --[[bool]] isMenuOpen, --[[bool]] isMouseOverBar, --[[MenuBarComponent]] component)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;-- end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:drawComboBox (--[[Graphics]] g, --[[int]] width, --[[int]] height, --[[bool]] isButtonDown, --[[int]] buttonX, --[[int]] buttonY, --[[int]] buttonW, --[[int]] buttonH, --[[ComboBox]] component)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;-- end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:getComboBoxFont (--[[ComboBox]] component)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;&#9;-- returnValue = Font()&#13;&#10;&#9;-- return returnValue&#13;&#10;--end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:createComboBoxTextBox (--[[ComboBox]] component)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;&#9;-- returnValue = Label()&#13;&#10;&#9;-- return returnValue&#13;&#10;--end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:positionComboBoxText (--[[ComboBox]] component, --[[Label]] label)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;-- end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:drawLabel (--[[Graphics]] g, --[[Label]] label)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;-- end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:drawLinearSlider (--[[Graphics]] g, --[[int]] x, --[[int]] y, --[[int]] width, --[[int]] height, --[[float]] sliderPos, --[[float]] minSliderPos, --[[float]] maxSliderPos, --[[Slider::SliderStyle]] style, --[[Slider]] component)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;-- end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:drawLinearSliderBackground (--[[Graphics]] g, --[[int]] x, --[[int]] y, --[[int]] width, --[[int]] height, --[[float]] sliderPos, --[[float]] minSliderPos, --[[float]] maxSliderPos, --[[Slider::SliderStyle]] style, --[[Slider]] component)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;-- end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:drawLinearSliderThumb (--[[Graphics]] g, --[[int]] x, --[[int]] y, --[[int]] width, --[[int]] height, --[[float]] sliderPos, --[[float]] minSliderPos, --[[float]] maxSliderPos, --[[Slider::SliderStyle]] style, --[[Slider]] component)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;-- end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:getSliderThumbRadius (--[[Slider]] component)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;&#9;-- returnValue == 1&#13;&#10;&#9;-- return returnValue&#13;&#10;--end&#13;&#10;&#13;&#10;function CustomLookAndFeel:drawRotarySlider (--[[Graphics]] g, --[[int]] x, --[[int]] y, --[[int]] width, --[[int]] height, --[[float]] sliderPosProportional, --[[float]] rotaryStartAngle, --[[float]] rotaryEndAngle, --[[Slider]] slider)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;&#9;red = Colour(0xffff0000)&#13;&#10;&#9;slider:getTextBoxPosition()&#13;&#10;&#13;&#10;    if slider:getTextBoxPosition () ~= Slider.NoTextBox then&#13;&#10;        slider:setTextBoxStyle (Slider.NoTextBox,false,0,0);&#13;&#10;&#9;end&#13;&#10;&#13;&#10;    radius = (height / 2) - 2.0;&#13;&#10;    centreX = x + width * 0.5;&#13;&#10;    centreY = y + height * 0.5;&#13;&#10;    rx = centreX - radius;&#13;&#10;    ry = centreY - radius;&#13;&#10;    rw = radius * 2.0;&#13;&#10;    angle = rotaryStartAngle + sliderPosProportional * (rotaryEndAngle - rotaryStartAngle);&#13;&#10;    thickness = 0.5;&#13;&#10;    segmentSize = (rotaryEndAngle - rotaryStartAngle) / 20.0;&#13;&#10;&#9;&#13;&#10;&#13;&#10;    for i=rotaryStartAngle,rotaryEndAngle,segmentSize do&#13;&#10;        if i &lt;= angle and angle ~= rotaryStartAngle then&#13;&#10;            g:setColour (red:withAlpha(0.75))&#13;&#10;        else&#13;&#10;            g:setColour (red:withAlpha(0.2))&#13;&#10;&#9;&#9;end&#13;&#10;&#13;&#10;        filledArc = Path()&#13;&#10;        filledArc:addPieSegment (rx, ry, rw, rw, i, (i + segmentSize - (segmentSize * 0.2)), thickness)&#13;&#10;        g:fillPath (filledArc, AffineTransform())&#13;&#10;    end&#13;&#10;&#13;&#10;&#13;&#10;&#9;f = Font (rw * 0.25, Font.plain)&#13;&#10;&#9;g:setFont (f)&#13;&#10;&#9;g:setColour (red:brighter (0.2))&#13;&#10;    g:drawText (string.format (&quot;%.0f&quot;, slider:getValue()), 0, 0, width, height, Justification (Justification.centred), true)&#13;&#10;&#13;&#10;end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:createSliderButton (--[[Slider]] component, --[[bool]] isIncrement)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;&#9;-- returnValue = Button()&#13;&#10;&#9;-- return returnValue&#13;&#10;--end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:createSliderTextBox (--[[Slider]] component)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;&#9;-- returnValue = Label()&#13;&#10;&#9;-- return returnValue&#13;&#10;--end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:getSliderEffect (--[[Slider]] component)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;&#9;-- returnValue = ImageEffectFilter()&#13;&#10;&#9;-- return returnValue&#13;&#10;--end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:getTooltipSize (--[[String]] tipText, --[[int]] width, --[[int]] height)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;-- end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:drawTooltip (--[[Graphics]] g, --[[String]] text, --[[int]] width, --[[int]] height)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;-- end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:createFilenameComponentBrowseButton (--[[String]] text)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;&#9;-- returnValue = Button()&#13;&#10;&#9;-- return returnValue&#13;&#10;--end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:layoutFilenameComponent (--[[FilenameComponent]] component, --[[ComboBox*]] filenameBox, --[[Button*]] browseButton)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;-- end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:drawConcertinaPanelHeader (--[[Graphics]] g, --[[Rectangle]] area, --[[bool]] isMouseOver, --[[bool]] isMouseDown, --[[ConcertinaPanel]] component, --[[Component]] panel)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;-- end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:drawCornerResizer (--[[Graphics]] g, --[[int]] w, --[[int]] h, --[[bool]] isMouseOver, --[[bool]] isMouseDragging)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;-- end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:drawResizableFrame (--[[Graphics]] g, --[[int]] w, --[[int]] h, --[[BorderSize]] borderSize)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;-- end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:fillResizableWindowBackground (--[[Graphics]] g, --[[int]] w, --[[int]] h, --[[BorderSize]] borderSize, --[[ResizableWindow]] window)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;-- end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:drawResizableWindowBorder (--[[Graphics]] g, --[[int]] w, --[[int]] h, --[[BorderSize]] borderSize, --[[ResizableWindow]] window)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;-- end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:drawDocumentWindowTitleBar (--[[DocumentWindow]] window, --[[Graphics]] g, --[[int]] w, --[[int]] h, --[[int]] titleSpaceX, --[[int]] titleSpaceW, --[[Image*]] icon, --[[bool]] drawTitleTextOnLeft)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;-- end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:createDocumentWindowButton (--[[int]] buttonType)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;&#9;-- returnValue = Button()&#13;&#10;&#9;-- return returnValue&#13;&#10;--end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:positionDocumentWindowButtons (--[[DocumentWindow]] window, --[[int]] titleBarX, --[[int]] titleBarY, --[[int]] titleBarW, --[[int]] titleBarH, --[[Button*]] minimiseButton, --[[Button*]] maximiseButton, --[[Button*]] closeButton, --[[bool]] positionTitleBarButtonsOnLeft)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;-- end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:getDefaultMenuBarHeight ()&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;&#9;-- returnValue == 1&#13;&#10;&#9;-- return returnValue&#13;&#10;--end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:createDropShadowerForComponent (--[[Component*]] component)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;&#9;-- returnValue = DropShadower()&#13;&#10;&#9;-- return returnValue&#13;&#10;--end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:drawGroupComponentOutline (--[[Graphics]] g, --[[int]] w, --[[int]] h, --[[String]] text, --[[Justification]] justification, --[[GroupComponent]] component)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;-- end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:getTabButtonSpaceAroundImage ()&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;&#9;-- returnValue == 1&#13;&#10;&#9;-- return returnValue&#13;&#10;--end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:getTabButtonOverlap (--[[int]] tabDepth)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;&#9;-- returnValue == 1&#13;&#10;&#9;-- return returnValue&#13;&#10;--end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:getTabButtonBestWidth (--[[TabBarButton]] component, --[[int]] tabDepth)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;&#9;-- returnValue == 1&#13;&#10;&#9;-- return returnValue&#13;&#10;--end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:getTabButtonExtraComponentBounds (--[[TabBarButton]] component, --[[Rectangle]] textArea, --[[Component]] extraComp)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;&#9;-- returnValue = Rectangle()&#13;&#10;&#9;-- return returnValue&#13;&#10;--end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:drawTabButton (--[[TabBarButton]] component, --[[Graphics]] g, --[[bool]] isMouseOver, --[[bool]] isMouseDown)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;-- end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:drawTabButtonText (--[[TabBarButton]] component, --[[Graphics]] g, --[[bool]] isMouseOver, --[[bool]] isMouseDown)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;-- end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:drawTabAreaBehindFrontButton (--[[TabbedButtonBar]] component, --[[Graphics]] g, --[[int]] w, --[[int]] h)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;-- end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:createTabButtonShape (--[[TabBarButton]] component, --[[Path]] p, --[[bool]] isMouseOver, --[[bool]] isMouseDown)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;-- end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:fillTabButtonShape (--[[TabBarButton]] component, --[[Graphics]] g, --[[Path]] p, --[[bool]] isMouseOver, --[[bool]] isMouseDown)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;-- end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:createTabBarExtrasButton ()&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;&#9;-- returnValue = Button()&#13;&#10;&#9;-- return returnValue&#13;&#10;--end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:drawImageButton (--[[Graphics]] g, --[[Image*]] image, --[[int]] imageX, --[[int]] imageY, --[[int]] imageW, --[[int]] imageH, --[[Colour]] overlayColour, --[[float]] imageOpacity, --[[ImageButton]] component)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;-- end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:drawTableHeaderBackground (--[[Graphics]] g, --[[TableHeaderComponent]] component)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;-- end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:drawTableHeaderColumn (--[[Graphics]] g, --[[String]] columnName, --[[int]] columnId, --[[int]] width, --[[int]] height, --[[bool]] isMouseOver, --[[bool]] isMouseDown, --[[int]] columnFlags)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;-- end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:paintToolbarBackground (--[[Graphics]] g, --[[int]] width, --[[int]] height, --[[Toolbar]] component)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;-- end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:createToolbarMissingItemsButton (--[[Toolbar]] component)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;&#9;-- returnValue = Button()&#13;&#10;&#9;-- return returnValue&#13;&#10;--end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:paintToolbarButtonBackground (--[[Graphics]] g, --[[int]] width, --[[int]] height, --[[bool]] isMouseOver, --[[bool]] isMouseDown, --[[ToolbarItemComponent]] component)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;-- end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:paintToolbarButtonLabel (--[[Graphics]] g, --[[int]] x, --[[int]] y, --[[int]] width, --[[int]] height, --[[String]] text, --[[ToolbarItemComponent]] component)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;-- end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:drawStretchableLayoutResizerBar (--[[Graphics]] g, --[[int]] w, --[[int]] h, --[[bool]] isVerticalBar, --[[bool]] isMouseOver, --[[bool]] isMouseDragging)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;-- end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:drawPropertyPanelSectionHeader (--[[Graphics]] g, --[[String]] name, --[[bool]] isOpen, --[[int]] width, --[[int]] height)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;-- end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:drawPropertyComponentBackground (--[[Graphics]] g, --[[int]] width, --[[int]] height, --[[PropertyComponent]] component)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;-- end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:drawPropertyComponentLabel (--[[Graphics]] g, --[[int]] width, --[[int]] height, --[[PropertyComponent]] component)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;-- end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:getPropertyComponentContentPosition (--[[PropertyComponent]] component)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;&#9;-- returnValue = Rectangle()&#13;&#10;&#9;-- return returnValue&#13;&#10;--end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:drawCallOutBoxBackground (--[[CallOutBox]] component, --[[Graphics]] g, --[[Path]] path, --[[Image]] cachedImage)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;-- end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:drawLevelMeter (--[[Graphics]] g, --[[int]] width, --[[int]] height, --[[float]] level)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;-- end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:drawKeymapChangeButton (--[[Graphics]] g, --[[int]] width, --[[int]] height, --[[Button]] component, --[[String]] keyDescription)&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;-- end&#13;&#10;&#13;&#10;-- function CustomLookAndFeel:playAlertSound ()&#13;&#10;&#9;--&#13;&#10;&#9;-- Body&#13;&#10;&#9;--&#13;&#10;-- end"
                 luaMethodLinkedProperty="" luaMethodSource="0" uuid="67b7cddc597140ef98739550fa17ead0"
                 luaMethodValid="1"/>
    </luaManagerMethods>
  </luaManager>
  <panelResources/>
  <uiPanelEditor uiPanelCanvasRectangle="0 0 600 399" uiPanelSnapSize="8" uiPanelBackgroundColour="0xffffffff"
                 uiPanelBackgroundColour1="ff4a4a4a" uiPanelBackgroundColour2="ff000000"
                 uiPanelBackgroundGradientType="1" uiPanelImageResource="-- None"
                 uiPanelEditMode="0" uiPanelViewPortSize="1237" uiPanelPropertiesSize="309"
                 uiPanelLock="0" uiPanelDisabledOnEdit="0" uiPanelWidth="400"
                 uiPanelHeight="400" name="JoMoX M.Brane 11" uiPanelImageAlpha="255"
                 uiPanelImageLayout="64" uiPanelSnapActive="1" uiPanelPropertiesOnRight="0"
                 luaPanelPaintBackground="-- None" luaPanelResized="-- None" luaPanelFileDragDropHandler="-- None"
                 luaPanelFileDragEnterHandler="-- None" luaPanelFileDragExitHandler="-- None"
                 uiPanelInvisibleComponentAlpha="0.5" uiPanelMidiToolbarVisible="0"
                 uiPanelTooltipBackgroundColour="0xffeeeebb" uiPanelTooltipOutlineColour="0xff000000"
                 uiPanelTooltipColour="0xff000000" uiPanelTooltipCornerRound="1"
                 uiPanelTooltipPlacement="2" uiPanelTooltipFont="&lt;Sans-Serif&gt;;15;1;0;0;0;1;0"
                 uiPanelZoom="1">
    <uiPanelCanvasLayer uiPanelCanvasLayerName="New layer" uiPanelCanvasLayerUid="356c3936160000005b0000006e000000"
                        uiPanelCanvasLayerColour="0x000000" uiPanelCanvasLayerVisibility="1"
                        uiPanelCanvasLayerIndex="0"/>
  </uiPanelEditor>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="0" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="decay" modulatorMin="0" modulatorValue="14">
    <midi midiMessageType="0" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="110" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;0" componentVisibleName="Decay"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;0"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;0" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="ffffffff" uiSliderValueBgColour="ffffff"
               uiSliderRotaryOutlineColour="ffff0000" uiSliderRotaryFillColour="ffff0000"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="ffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;0" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="356c3936160000005b0000006e000000"
               componentRectangle="392 280 80 80" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="255" vstIndex="2" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="m1Pitch" modulatorMin="0" modulatorValue="127">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,90,-1:CC,ByteValue,LSB7bitValue,91,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;0" componentVisibleName="M1 Pitch"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;0"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;0" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="255" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="ffffffff" uiSliderValueBgColour="ffffff"
               uiSliderRotaryOutlineColour="ffff0000" uiSliderRotaryFillColour="ffff0000"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="ffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;0" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="88 8 80 80"
               componentLayerUid="356c3936160000005b0000006e000000"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="255" vstIndex="3" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="m1Dampen" modulatorMin="0" modulatorValue="127">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,92,-1:CC,ByteValue,LSB7bitValue,93,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;0" componentVisibleName="M1 Dampen"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="0.5" componentEffectColour="0xff000000"
               componentEffectOffsetX="7.5" componentEffectOffsetY="15" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;0"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;0" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="255" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="ffffffff" uiSliderValueBgColour="ffffff"
               uiSliderRotaryOutlineColour="ffff0000" uiSliderRotaryFillColour="ffff0000"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="ffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;0" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="356c3936160000005b0000006e000000"
               componentRectangle="168 8 80 80" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="255" vstIndex="4" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="m2Pitch" modulatorMin="0" modulatorValue="49">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,94,-1:CC,ByteValue,LSB7bitValue,95,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;0" componentVisibleName="M2 Pitch"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;0"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;0" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="255" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="ffffffff" uiSliderValueBgColour="ffffff"
               uiSliderRotaryOutlineColour="ffff0000" uiSliderRotaryFillColour="ffff0000"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="ffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;0" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="356c3936160000005b0000006e000000"
               componentRectangle="88 96 80 80" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="255" vstIndex="5" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="m2Dampen" modulatorMin="0" modulatorValue="83">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,96,-1:CC,ByteValue,LSB7bitValue,97,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;0" componentVisibleName="M2 Dampen"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="0.5" componentEffectColour="0xff000000"
               componentEffectOffsetX="7.5" componentEffectOffsetY="15" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;0"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;0" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="255" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="ffffffff" uiSliderValueBgColour="ffffff"
               uiSliderRotaryOutlineColour="ffff0000" uiSliderRotaryFillColour="ffff0000"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="ffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;0" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="168 96 80 80"
               componentLayerUid="356c3936160000005b0000006e000000"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="255" vstIndex="6" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="m1_2Couplg" modulatorMin="0" modulatorValue="127">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,100,-1:CC,ByteValue,LSB7bitValue,101,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;0" componentVisibleName="M1_2 Couplg"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="0.5" componentEffectColour="0xff000000"
               componentEffectOffsetX="7.5" componentEffectOffsetY="15" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;0"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;0" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="255" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="ffffffff" uiSliderValueBgColour="ffffff"
               uiSliderRotaryOutlineColour="ffff0000" uiSliderRotaryFillColour="ffff0000"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="ffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;0" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="8 8 80 80"
               componentLayerUid="356c3936160000005b0000006e000000"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="255" vstIndex="7" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="m2_1Couplg" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,102,-1:CC,ByteValue,LSB7bitValue,103,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;0" componentVisibleName="M2_1 Couplg"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="0.5" componentEffectColour="0xff000000"
               componentEffectOffsetX="7.5" componentEffectOffsetY="15" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;0"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;0" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="255" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="ffffffff" uiSliderValueBgColour="ffffff"
               uiSliderRotaryOutlineColour="ffff0000" uiSliderRotaryFillColour="ffff0000"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="ffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;0" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="356c3936160000005b0000006e000000"
               componentRectangle="8 96 80 80" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="8" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="noise" modulatorMin="0" modulatorValue="64">
    <midi midiMessageType="0" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="109" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;0" componentVisibleName="Noise"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;0"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;0" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="ffffffff" uiSliderValueBgColour="ffffff"
               uiSliderRotaryOutlineColour="ffff0000" uiSliderRotaryFillColour="ffff0000"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="ffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;0" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="8 192 80 80"
               componentLayerUid="356c3936160000005b0000006e000000"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="9" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="noiseFilter" modulatorMin="0" modulatorValue="17">
    <midi midiMessageType="0" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="112" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;0" componentVisibleName="Noise Filter"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;0"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;0" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="ffffffff" uiSliderValueBgColour="ffffff"
               uiSliderRotaryOutlineColour="ffff0000" uiSliderRotaryFillColour="ffff0000"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="ffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;0" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="356c3936160000005b0000006e000000"
               componentRectangle="8 280 80 80" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="255" vstIndex="10" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="metaNoiseA" modulatorMin="0" modulatorValue="65">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,106,-1:CC,ByteValue,LSB7bitValue,107,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;0" componentVisibleName="Metal Noise A"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;0"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;0" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="255" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="ffffffff" uiSliderValueBgColour="ffffff"
               uiSliderRotaryOutlineColour="ffff0000" uiSliderRotaryFillColour="ffff0000"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="ffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;0" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="88 192 80 80"
               componentLayerUid="356c3936160000005b0000006e000000"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="255" vstIndex="11" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="metaNoiseB" modulatorMin="0" modulatorValue="29">
    <midi midiMessageType="6" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="1" midiMessageCtrlrValue="0" midiMessageMultiList="CC,ByteValue,MSB7bitValue,115,-1:CC,ByteValue,LSB7bitValue,116,-1"
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;0" componentVisibleName="Metal Noise B"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;0"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;0" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="255" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="ffffffff" uiSliderValueBgColour="ffffff"
               uiSliderRotaryOutlineColour="ffff0000" uiSliderRotaryFillColour="ffff0000"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="ffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;0" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="356c3936160000005b0000006e000000"
               componentRectangle="88 280 80 80" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="12" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="gate" modulatorMin="0" modulatorValue="80">
    <midi midiMessageType="0" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="114" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;0" componentVisibleName="Gate"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;0"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;0" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="ffffffff" uiSliderValueBgColour="ffffff"
               uiSliderRotaryOutlineColour="ffff0000" uiSliderRotaryFillColour="ffff0000"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="ffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;0" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="304 280 80 80"
               componentLayerUid="356c3936160000005b0000006e000000"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="13" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="volume" modulatorMin="0" modulatorValue="27">
    <midi midiMessageType="0" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="117" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;0" componentVisibleName="Volume"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;0"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;0" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="ffffffff" uiSliderValueBgColour="ffffff"
               uiSliderRotaryOutlineColour="ffff0000" uiSliderRotaryFillColour="ffff0000"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="ffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;0" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="356c3936160000005b0000006e000000"
               componentRectangle="480 280 80 80" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="7" vstIndex="14" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="lfoWave" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="0" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="119" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;0" componentVisibleName="LFO Wave"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;0"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;0" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiComboArrowColour="0xff0000ff"
               uiComboOutlineColour="0xff0000ff" uiComboTextColour="0xff000000"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;0"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;0" uiComboButtonColour="0xff0000ff"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="Saw up&#10;Saw down&#10;Sine asc&#10;Sine desc&#10;Triangualr asc&#10;Trangualr desc&#10;Rectengualr min-max&#10;Rectengualr max-min"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" componentLayerUid="356c3936160000005b0000006e000000"
               componentRectangle="304 8 256 40" uiType="uiCombo"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="3" vstIndex="15" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="lfoWave-1" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="0" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="120" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;0;0" componentVisibleName="LFO Select"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;0"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;0" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiComboArrowColour="0xff0000ff"
               uiComboOutlineColour="0xff0000ff" uiComboTextColour="0xff000000"
               uiComboTextJustification="centred" uiComboFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;0"
               uiComboMenuFont="&lt;Sans-Serif&gt;;16;0;0;0;0;1;0" uiComboButtonColour="0xff0000ff"
               uiComboBgColour="0xffffffff" uiComboMenuBackgroundColour="0xfff0f0f0"
               uiComboMenuFontColour="0xff000000" uiComboMenuHighlightColour="ffadd8e6"
               uiComboMenuFontHighlightedColour="0xff232323" uiComboContent="LFO Off&#10;LFO to T-OSC M1=32&#10;LFO to T-OSC M2=64&#10;LFO to T-OSC M1 and M2=96"
               uiComboMenuBackgroundRibbed="1" uiComboButtonGradient="0" uiComboButtonGradientColour1="ff0000ff"
               uiComboButtonGradientColour2="ff00008b" uiComboButtonWidthOverride="0"
               uiComboButtonWidth="16" uiComboDynamicContent="0" uiComboSelectedId="-1"
               uiComboSelectedIndex="-1" uiType="uiCombo" componentRectangle="304 64 256 40"
               componentLayerUid="356c3936160000005b0000006e000000"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="17" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="volume-1" modulatorMin="0" modulatorValue="64">
    <midi midiMessageType="0" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="121" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;0" componentVisibleName="LFO Intensity"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;0"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;0" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="ffffffff" uiSliderValueBgColour="ffffff"
               uiSliderRotaryOutlineColour="ffff0000" uiSliderRotaryFillColour="ffff0000"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="ffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="0xffffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;0" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" uiType="uiSlider" componentRectangle="304 112 80 80"
               componentLayerUid="356c3936160000005b0000006e000000"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="127" vstIndex="18" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="volume-2" modulatorMin="0" modulatorValue="64">
    <midi midiMessageType="0" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="122" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="1"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;0" componentVisibleName="LFO Speed"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;0"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;0" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiSliderStyle="RotaryVerticalDrag"
               uiSliderMin="0" uiSliderMax="127" uiSliderInterval="1" uiSliderDoubleClickEnabled="1"
               uiSliderDoubleClickValue="0" uiSliderValuePosition="4" uiSliderValueHeight="12"
               uiSliderValueWidth="64" uiSliderTrackCornerSize="5" uiSliderThumbCornerSize="3"
               uiSliderThumbWidth="0" uiSliderThumbHeight="0" uiSliderThumbFlatOnLeft="0"
               uiSliderThumbFlatOnRight="0" uiSliderThumbFlatOnTop="0" uiSliderThumbFlatOnBottom="0"
               uiSliderValueTextColour="ffffffff" uiSliderValueBgColour="ffffff"
               uiSliderRotaryOutlineColour="ffff0000" uiSliderRotaryFillColour="ffff0000"
               uiSliderThumbColour="0xffff0000" uiSliderValueHighlightColour="0xff0000ff"
               uiSliderValueOutlineColour="ffffff" uiSliderTrackColour="0xff0f0f0f"
               uiSliderIncDecButtonColour="0xff0000ff" uiSliderIncDecTextColour="ffffff"
               uiSliderValueFont="&lt;Sans-Serif&gt;;12;0;0;0;0;1;0" uiSliderValueTextJustification="centred"
               uiSliderVelocitySensitivity="1" uiSliderVelocityThreshold="1"
               uiSliderVelocityOffset="0" uiSliderVelocityMode="0" uiSliderVelocityModeKeyTrigger="1"
               uiSliderSpringMode="0" uiSliderSpringValue="0" uiSliderMouseWheelInterval="1"
               uiSliderPopupBubble="0" componentLayerUid="356c3936160000005b0000006e000000"
               componentRectangle="384 112 80 80" uiType="uiSlider"/>
  </modulator>
  <modulator modulatorCustomIndex="0" modulatorCustomIndexGroup="0" modulatorIsStatic="1"
             name="modulator-4" modulatorVstExported="0" modulatorValue="0">
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="0xff000000"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;0" componentVisibleName=""
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="Shadow" componentEffectRadius="16.1" componentEffectColour="ffff8a8a"
               componentEffectOffsetX="6" componentEffectOffsetY="4.7" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiLabelBgColour="0x00000000"
               uiLabelTextColour="ffffffff" uiLabelOutline="0" uiLabelOutlineColour="0x00000000"
               uiLabelJustification="centred" uiLabelFitFont="0" uiLabelFont="60sekuntia;40;0;0;0;0;1;2"
               uiLabelText="j OMOX - m.Brane 11" uiLabelDisplaysAllValues="0"
               uiLabelDisplayFormat="%n(%N) = %v(%h)" uiLabelInputHighlightTextColour="0xffffffff"
               uiLabelInputHighlightColour="0xff0000ff" uiLabelEditOnSingleClick="0"
               uiLabelEditOnDoubleClick="0" uiLabelEditFocusDiscardsChanges="1"
               uiLabelInputAllowedChars="" uiLabelInputMaxLength="1024" uiLabelChangedCbk="-- None"
               componentLayerUid="356c3936160000005b0000006e000000" componentRectangle="166 193 430 67"
               uiType="uiLabel"/>
  </modulator>
  <modulator modulatorVstExported="1" modulatorMax="1" vstIndex="19" modulatorIsStatic="0"
             modulatorGlobalVariable="-1" modulatorMuteOnStart="0" modulatorExcludeFromSnapshot="0"
             modulatorValueExpression="modulatorValue" modulatorValueExpressionReverse="midiValue"
             luaModulatorGetValueForMIDI="-- None" luaModulatorGetValueFromMIDI="-- None"
             modulatorLinkedToPanelProperty="-- None" modulatorLinkedToModulatorProperty="-- None"
             modulatorLinkedToModulator="-- None" modulatorLinkedToModulatorSource="1"
             modulatorLinkedToComponent="0" modulatorBaseValue="0" modulatorCustomIndex="0"
             modulatorCustomName="" modulatorCustomIndexGroup="0" modulatorCustomNameGroup=""
             modulatorVstNameFormat="%n" luaModulatorValueChange="-- None"
             name="lfoOneShot" modulatorMin="0" modulatorValue="0">
    <midi midiMessageType="0" midiMessageChannelOverride="0" midiMessageChannel="1"
          midiMessageCtrlrNumber="123" midiMessageCtrlrValue="0" midiMessageMultiList=""
          midiMessageSysExFormula=""/>
    <component componentLabelPosition="top" componentLabelJustification="centred"
               componentLabelHeight="14" componentLabelWidth="0" componentLabelVisible="0"
               componentLabelAlwaysOnTop="1" componentSentBack="0" componentLabelColour="ffffffff"
               componentLabelFont="&lt;Sans-Serif&gt;;12;1;0;0;0;1;0" componentVisibleName="modulator-1"
               componentMouseCursor="2" componentGroupName="" componentGroupped="0"
               componentSnapSize="0" componentIsLocked="0" componentDisabled="0"
               componentRadioGroupId="0" componentRadioGroupNotifyMidi="1" componentVisibility="1"
               componentEffect="0" componentEffectRadius="1" componentEffectColour="0xff000000"
               componentEffectOffsetX="0" componentEffectOffsetY="0" componentExcludedFromLabelDisplay="0"
               componentBubbleRoundAngle="10" componentBubbleBackgroundColour1="0x9cffffff"
               componentBubbleBackgroundColour2="0xbab9b9b9" componentBubbleBackgroundGradientType="1"
               componentBubbleValueColour="0xff000000" componentBubbleValueFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3"
               componentBubbleValueJustification="centred" componentBubbleNameColour="0xff000000"
               componentBubbleNameFont="&lt;Sans-Serif&gt;;14;0;0;0;0;1;3" componentBubbleNameJustification="centred"
               componentValueDecimalPlaces="0" uiButtonTextColourOn="ffffffff"
               uiToggleButtonText="LFO One Shot" uiButtonTrueValue="64" uiButtonFalseValue="0"
               uiButtonColourOff="ffff0000" componentRectangle="464 128 120 48"
               uiType="uiToggleButton" componentLayerUid="356c3936160000005b0000006e000000"/>
  </modulator>
</panel>
